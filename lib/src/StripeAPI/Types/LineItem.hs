{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema LineItem
module StripeAPI.Types.LineItem where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.BillingBillResourceInvoicingLinesCommonCreditedItems
import {-# SOURCE #-} StripeAPI.Types.BillingBillResourceInvoicingLinesCommonProrationDetails
import {-# SOURCE #-} StripeAPI.Types.BillingBillResourceInvoicingLinesParentsInvoiceLineItemInvoiceItemParent
import {-# SOURCE #-} StripeAPI.Types.BillingBillResourceInvoicingLinesParentsInvoiceLineItemParent
import {-# SOURCE #-} StripeAPI.Types.BillingBillResourceInvoicingLinesParentsInvoiceLineItemSubscriptionItemParent
import {-# SOURCE #-} StripeAPI.Types.BillingBillResourceInvoicingPricingPricing
import {-# SOURCE #-} StripeAPI.Types.BillingBillResourceInvoicingPricingPricingPriceDetails
import {-# SOURCE #-} StripeAPI.Types.BillingBillResourceInvoicingTaxesTax
import {-# SOURCE #-} StripeAPI.Types.Discount
import {-# SOURCE #-} StripeAPI.Types.DiscountsResourceDiscountAmount
import {-# SOURCE #-} StripeAPI.Types.InvoiceLineItemPeriod
import {-# SOURCE #-} StripeAPI.Types.InvoicesResourcePretaxCreditAmount
import {-# SOURCE #-} StripeAPI.Types.Subscription
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.line_item@ in the specification.
--
-- Invoice Line Items represent the individual lines within an [invoice](https:\/\/stripe.com\/docs\/api\/invoices) and only exist within the context of an invoice.
--
-- Each line item is backed by either an [invoice item](https:\/\/stripe.com\/docs\/api\/invoiceitems) or a [subscription item](https:\/\/stripe.com\/docs\/api\/subscription_items).
data LineItem = LineItem
  { -- | amount: The amount, in cents (or local equivalent).
    lineItemAmount :: GHC.Types.Int,
    -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
    lineItemCurrency :: Data.Text.Internal.Text,
    -- | description: An arbitrary string attached to the object. Often useful for displaying to users.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    lineItemDescription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | discount_amounts: The amount of discount calculated per discount for this line item.
    lineItemDiscountAmounts :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable [DiscountsResourceDiscountAmount])),
    -- | discountable: If true, discounts will apply to this line item. Always false for prorations.
    lineItemDiscountable :: GHC.Types.Bool,
    -- | discounts: The discounts applied to the invoice line item. Line item discounts are applied before invoice discounts. Use \`expand[]=discounts\` to expand each discount.
    lineItemDiscounts :: [LineItemDiscounts'Variants],
    -- | id: Unique identifier for the object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    lineItemId :: Data.Text.Internal.Text,
    -- | invoice: The ID of the invoice that contains this line item.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    lineItemInvoice :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
    lineItemLivemode :: GHC.Types.Bool,
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Note that for line items with \`type=subscription\`, \`metadata\` reflects the current metadata from the subscription associated with the line item, unless the invoice line was directly updated with different metadata after creation.
    lineItemMetadata :: Data.Aeson.Types.Internal.Object,
    -- | parent: The parent that generated this line item.
    lineItemParent :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable LineItemParent'NonNullable)),
    -- | period:
    lineItemPeriod :: InvoiceLineItemPeriod,
    -- | pretax_credit_amounts: Contains pretax credit amounts (ex: discount, credit grants, etc) that apply to this line item.
    lineItemPretaxCreditAmounts :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable [InvoicesResourcePretaxCreditAmount])),
    -- | pricing: The pricing information of the line item.
    lineItemPricing :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable LineItemPricing'NonNullable)),
    -- | quantity: The quantity of the subscription, if the line item is a subscription or a proration.
    lineItemQuantity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | subscription
    lineItemSubscription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable LineItemSubscription'NonNullableVariants)),
    -- | taxes: The tax information of the line item.
    lineItemTaxes :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable [BillingBillResourceInvoicingTaxesTax]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON LineItem where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= lineItemAmount obj] : ["currency" Data.Aeson.Types.ToJSON..= lineItemCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (lineItemDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount_amounts" Data.Aeson.Types.ToJSON..=)) (lineItemDiscountAmounts obj) : ["discountable" Data.Aeson.Types.ToJSON..= lineItemDiscountable obj] : ["discounts" Data.Aeson.Types.ToJSON..= lineItemDiscounts obj] : ["id" Data.Aeson.Types.ToJSON..= lineItemId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (lineItemInvoice obj) : ["livemode" Data.Aeson.Types.ToJSON..= lineItemLivemode obj] : ["metadata" Data.Aeson.Types.ToJSON..= lineItemMetadata obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("parent" Data.Aeson.Types.ToJSON..=)) (lineItemParent obj) : ["period" Data.Aeson.Types.ToJSON..= lineItemPeriod obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pretax_credit_amounts" Data.Aeson.Types.ToJSON..=)) (lineItemPretaxCreditAmounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pricing" Data.Aeson.Types.ToJSON..=)) (lineItemPricing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (lineItemQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription" Data.Aeson.Types.ToJSON..=)) (lineItemSubscription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("taxes" Data.Aeson.Types.ToJSON..=)) (lineItemTaxes obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "line_item"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= lineItemAmount obj] : ["currency" Data.Aeson.Types.ToJSON..= lineItemCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (lineItemDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount_amounts" Data.Aeson.Types.ToJSON..=)) (lineItemDiscountAmounts obj) : ["discountable" Data.Aeson.Types.ToJSON..= lineItemDiscountable obj] : ["discounts" Data.Aeson.Types.ToJSON..= lineItemDiscounts obj] : ["id" Data.Aeson.Types.ToJSON..= lineItemId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (lineItemInvoice obj) : ["livemode" Data.Aeson.Types.ToJSON..= lineItemLivemode obj] : ["metadata" Data.Aeson.Types.ToJSON..= lineItemMetadata obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("parent" Data.Aeson.Types.ToJSON..=)) (lineItemParent obj) : ["period" Data.Aeson.Types.ToJSON..= lineItemPeriod obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pretax_credit_amounts" Data.Aeson.Types.ToJSON..=)) (lineItemPretaxCreditAmounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pricing" Data.Aeson.Types.ToJSON..=)) (lineItemPricing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (lineItemQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription" Data.Aeson.Types.ToJSON..=)) (lineItemSubscription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("taxes" Data.Aeson.Types.ToJSON..=)) (lineItemTaxes obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "line_item"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON LineItem where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "LineItem" (\obj -> ((((((((((((((((GHC.Base.pure LineItem GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "discount_amounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "discountable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "discounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "parent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "period")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pretax_credit_amounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pricing")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subscription")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "taxes"))

-- | Create a new 'LineItem' with all required fields.
mkLineItem ::
  -- | 'lineItemAmount'
  GHC.Types.Int ->
  -- | 'lineItemCurrency'
  Data.Text.Internal.Text ->
  -- | 'lineItemDiscountable'
  GHC.Types.Bool ->
  -- | 'lineItemDiscounts'
  [LineItemDiscounts'Variants] ->
  -- | 'lineItemId'
  Data.Text.Internal.Text ->
  -- | 'lineItemLivemode'
  GHC.Types.Bool ->
  -- | 'lineItemMetadata'
  Data.Aeson.Types.Internal.Object ->
  -- | 'lineItemPeriod'
  InvoiceLineItemPeriod ->
  LineItem
mkLineItem lineItemAmount lineItemCurrency lineItemDiscountable lineItemDiscounts lineItemId lineItemLivemode lineItemMetadata lineItemPeriod =
  LineItem
    { lineItemAmount = lineItemAmount,
      lineItemCurrency = lineItemCurrency,
      lineItemDescription = GHC.Maybe.Nothing,
      lineItemDiscountAmounts = GHC.Maybe.Nothing,
      lineItemDiscountable = lineItemDiscountable,
      lineItemDiscounts = lineItemDiscounts,
      lineItemId = lineItemId,
      lineItemInvoice = GHC.Maybe.Nothing,
      lineItemLivemode = lineItemLivemode,
      lineItemMetadata = lineItemMetadata,
      lineItemParent = GHC.Maybe.Nothing,
      lineItemPeriod = lineItemPeriod,
      lineItemPretaxCreditAmounts = GHC.Maybe.Nothing,
      lineItemPricing = GHC.Maybe.Nothing,
      lineItemQuantity = GHC.Maybe.Nothing,
      lineItemSubscription = GHC.Maybe.Nothing,
      lineItemTaxes = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @components.schemas.line_item.properties.discounts.items.anyOf@ in the specification.
data LineItemDiscounts'Variants
  = LineItemDiscounts'Text Data.Text.Internal.Text
  | LineItemDiscounts'Discount Discount
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON LineItemDiscounts'Variants where
  toJSON (LineItemDiscounts'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (LineItemDiscounts'Discount a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON LineItemDiscounts'Variants where
  parseJSON val = case (LineItemDiscounts'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((LineItemDiscounts'Discount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @components.schemas.line_item.properties.parent.anyOf@ in the specification.
--
-- The parent that generated this line item.
data LineItemParent'NonNullable = LineItemParent'NonNullable
  { -- | invoice_item_details: Details about the invoice item that generated this line item
    lineItemParent'NonNullableInvoiceItemDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable LineItemParent'NonNullableInvoiceItemDetails'NonNullable)),
    -- | subscription_item_details: Details about the subscription item that generated this line item
    lineItemParent'NonNullableSubscriptionItemDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable LineItemParent'NonNullableSubscriptionItemDetails'NonNullable)),
    -- | type: The type of parent that generated this line item
    lineItemParent'NonNullableType :: (GHC.Maybe.Maybe LineItemParent'NonNullableType')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON LineItemParent'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_item_details" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription_item_details" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_item_details" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription_item_details" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON LineItemParent'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "LineItemParent'NonNullable" (\obj -> ((GHC.Base.pure LineItemParent'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_item_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subscription_item_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type"))

-- | Create a new 'LineItemParent'NonNullable' with all required fields.
mkLineItemParent'NonNullable :: LineItemParent'NonNullable
mkLineItemParent'NonNullable =
  LineItemParent'NonNullable
    { lineItemParent'NonNullableInvoiceItemDetails = GHC.Maybe.Nothing,
      lineItemParent'NonNullableSubscriptionItemDetails = GHC.Maybe.Nothing,
      lineItemParent'NonNullableType = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.line_item.properties.parent.anyOf.properties.invoice_item_details.anyOf@ in the specification.
--
-- Details about the invoice item that generated this line item
data LineItemParent'NonNullableInvoiceItemDetails'NonNullable = LineItemParent'NonNullableInvoiceItemDetails'NonNullable
  { -- | invoice_item: The invoice item that generated this line item
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    lineItemParent'NonNullableInvoiceItemDetails'NonNullableInvoiceItem :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | proration: Whether this is a proration
    lineItemParent'NonNullableInvoiceItemDetails'NonNullableProration :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | proration_details: Additional details for proration line items
    lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullable)),
    -- | subscription: The subscription that the invoice item belongs to
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    lineItemParent'NonNullableInvoiceItemDetails'NonNullableSubscription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON LineItemParent'NonNullableInvoiceItemDetails'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_item" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails'NonNullableInvoiceItem obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proration" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails'NonNullableProration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proration_details" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails'NonNullableSubscription obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_item" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails'NonNullableInvoiceItem obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proration" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails'NonNullableProration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proration_details" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails'NonNullableSubscription obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON LineItemParent'NonNullableInvoiceItemDetails'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "LineItemParent'NonNullableInvoiceItemDetails'NonNullable" (\obj -> (((GHC.Base.pure LineItemParent'NonNullableInvoiceItemDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_item")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "proration")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "proration_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subscription"))

-- | Create a new 'LineItemParent'NonNullableInvoiceItemDetails'NonNullable' with all required fields.
mkLineItemParent'NonNullableInvoiceItemDetails'NonNullable :: LineItemParent'NonNullableInvoiceItemDetails'NonNullable
mkLineItemParent'NonNullableInvoiceItemDetails'NonNullable =
  LineItemParent'NonNullableInvoiceItemDetails'NonNullable
    { lineItemParent'NonNullableInvoiceItemDetails'NonNullableInvoiceItem = GHC.Maybe.Nothing,
      lineItemParent'NonNullableInvoiceItemDetails'NonNullableProration = GHC.Maybe.Nothing,
      lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails = GHC.Maybe.Nothing,
      lineItemParent'NonNullableInvoiceItemDetails'NonNullableSubscription = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.line_item.properties.parent.anyOf.properties.invoice_item_details.anyOf.properties.proration_details.anyOf@ in the specification.
--
-- Additional details for proration line items
data LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullable = LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullable
  { -- | credited_items: For a credit proration \`line_item\`, the original debit line_items to which the credit proration applies.
    lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credited_items" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credited_items" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullable" (\obj -> GHC.Base.pure LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "credited_items"))

-- | Create a new 'LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullable' with all required fields.
mkLineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullable :: LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullable
mkLineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullable = LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullable {lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems = GHC.Maybe.Nothing}

-- | Defines the object schema located at @components.schemas.line_item.properties.parent.anyOf.properties.invoice_item_details.anyOf.properties.proration_details.anyOf.properties.credited_items.anyOf@ in the specification.
--
-- For a credit proration \\\`line_item\\\`, the original debit line_items to which the credit proration applies.
data LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable = LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable
  { -- | invoice: Invoice containing the credited invoice line items
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoice :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | invoice_line_items: Credited invoice line items
    lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoiceLineItems :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_line_items" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoiceLineItems obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_line_items" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoiceLineItems obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable" (\obj -> (GHC.Base.pure LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_line_items"))

-- | Create a new 'LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable' with all required fields.
mkLineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable :: LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable
mkLineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable =
  LineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable
    { lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoice = GHC.Maybe.Nothing,
      lineItemParent'NonNullableInvoiceItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoiceLineItems = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.line_item.properties.parent.anyOf.properties.subscription_item_details.anyOf@ in the specification.
--
-- Details about the subscription item that generated this line item
data LineItemParent'NonNullableSubscriptionItemDetails'NonNullable = LineItemParent'NonNullableSubscriptionItemDetails'NonNullable
  { -- | invoice_item: The invoice item that generated this line item
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    lineItemParent'NonNullableSubscriptionItemDetails'NonNullableInvoiceItem :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | proration: Whether this is a proration
    lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProration :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | proration_details: Additional details for proration line items
    lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullable)),
    -- | subscription: The subscription that the subscription item belongs to
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    lineItemParent'NonNullableSubscriptionItemDetails'NonNullableSubscription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | subscription_item: The subscription item that generated this line item
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    lineItemParent'NonNullableSubscriptionItemDetails'NonNullableSubscriptionItem :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON LineItemParent'NonNullableSubscriptionItemDetails'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_item" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableInvoiceItem obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proration" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proration_details" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableSubscription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription_item" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableSubscriptionItem obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_item" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableInvoiceItem obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proration" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proration_details" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableSubscription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription_item" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableSubscriptionItem obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON LineItemParent'NonNullableSubscriptionItemDetails'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "LineItemParent'NonNullableSubscriptionItemDetails'NonNullable" (\obj -> ((((GHC.Base.pure LineItemParent'NonNullableSubscriptionItemDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_item")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "proration")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "proration_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subscription")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subscription_item"))

-- | Create a new 'LineItemParent'NonNullableSubscriptionItemDetails'NonNullable' with all required fields.
mkLineItemParent'NonNullableSubscriptionItemDetails'NonNullable :: LineItemParent'NonNullableSubscriptionItemDetails'NonNullable
mkLineItemParent'NonNullableSubscriptionItemDetails'NonNullable =
  LineItemParent'NonNullableSubscriptionItemDetails'NonNullable
    { lineItemParent'NonNullableSubscriptionItemDetails'NonNullableInvoiceItem = GHC.Maybe.Nothing,
      lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProration = GHC.Maybe.Nothing,
      lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails = GHC.Maybe.Nothing,
      lineItemParent'NonNullableSubscriptionItemDetails'NonNullableSubscription = GHC.Maybe.Nothing,
      lineItemParent'NonNullableSubscriptionItemDetails'NonNullableSubscriptionItem = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.line_item.properties.parent.anyOf.properties.subscription_item_details.anyOf.properties.proration_details.anyOf@ in the specification.
--
-- Additional details for proration line items
data LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullable = LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullable
  { -- | credited_items: For a credit proration \`line_item\`, the original debit line_items to which the credit proration applies.
    lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credited_items" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credited_items" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullable" (\obj -> GHC.Base.pure LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "credited_items"))

-- | Create a new 'LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullable' with all required fields.
mkLineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullable :: LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullable
mkLineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullable = LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullable {lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems = GHC.Maybe.Nothing}

-- | Defines the object schema located at @components.schemas.line_item.properties.parent.anyOf.properties.subscription_item_details.anyOf.properties.proration_details.anyOf.properties.credited_items.anyOf@ in the specification.
--
-- For a credit proration \\\`line_item\\\`, the original debit line_items to which the credit proration applies.
data LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable = LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable
  { -- | invoice: Invoice containing the credited invoice line items
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoice :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | invoice_line_items: Credited invoice line items
    lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoiceLineItems :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_line_items" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoiceLineItems obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_line_items" Data.Aeson.Types.ToJSON..=)) (lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoiceLineItems obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable" (\obj -> (GHC.Base.pure LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_line_items"))

-- | Create a new 'LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable' with all required fields.
mkLineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable :: LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable
mkLineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable =
  LineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullable
    { lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoice = GHC.Maybe.Nothing,
      lineItemParent'NonNullableSubscriptionItemDetails'NonNullableProrationDetails'NonNullableCreditedItems'NonNullableInvoiceLineItems = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.line_item.properties.parent.anyOf.properties.type@ in the specification.
--
-- The type of parent that generated this line item
data LineItemParent'NonNullableType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    LineItemParent'NonNullableType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    LineItemParent'NonNullableType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"invoice_item_details"@
    LineItemParent'NonNullableType'EnumInvoiceItemDetails
  | -- | Represents the JSON value @"subscription_item_details"@
    LineItemParent'NonNullableType'EnumSubscriptionItemDetails
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON LineItemParent'NonNullableType' where
  toJSON (LineItemParent'NonNullableType'Other val) = val
  toJSON (LineItemParent'NonNullableType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (LineItemParent'NonNullableType'EnumInvoiceItemDetails) = "invoice_item_details"
  toJSON (LineItemParent'NonNullableType'EnumSubscriptionItemDetails) = "subscription_item_details"

instance Data.Aeson.Types.FromJSON.FromJSON LineItemParent'NonNullableType' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "invoice_item_details" -> LineItemParent'NonNullableType'EnumInvoiceItemDetails
          | val GHC.Classes.== "subscription_item_details" -> LineItemParent'NonNullableType'EnumSubscriptionItemDetails
          | GHC.Base.otherwise -> LineItemParent'NonNullableType'Other val
      )

-- | Defines the object schema located at @components.schemas.line_item.properties.pricing.anyOf@ in the specification.
--
-- The pricing information of the line item.
data LineItemPricing'NonNullable = LineItemPricing'NonNullable
  { -- | price_details:
    lineItemPricing'NonNullablePriceDetails :: (GHC.Maybe.Maybe BillingBillResourceInvoicingPricingPricingPriceDetails),
    -- | type: The type of the pricing details.
    lineItemPricing'NonNullableType :: (GHC.Maybe.Maybe LineItemPricing'NonNullableType'),
    -- | unit_amount_decimal: The unit amount (in the \`currency\` specified) of the item which contains a decimal value with at most 12 decimal places.
    lineItemPricing'NonNullableUnitAmountDecimal :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON LineItemPricing'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price_details" Data.Aeson.Types.ToJSON..=)) (lineItemPricing'NonNullablePriceDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (lineItemPricing'NonNullableType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount_decimal" Data.Aeson.Types.ToJSON..=)) (lineItemPricing'NonNullableUnitAmountDecimal obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price_details" Data.Aeson.Types.ToJSON..=)) (lineItemPricing'NonNullablePriceDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (lineItemPricing'NonNullableType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount_decimal" Data.Aeson.Types.ToJSON..=)) (lineItemPricing'NonNullableUnitAmountDecimal obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON LineItemPricing'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "LineItemPricing'NonNullable" (\obj -> ((GHC.Base.pure LineItemPricing'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "price_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_amount_decimal"))

-- | Create a new 'LineItemPricing'NonNullable' with all required fields.
mkLineItemPricing'NonNullable :: LineItemPricing'NonNullable
mkLineItemPricing'NonNullable =
  LineItemPricing'NonNullable
    { lineItemPricing'NonNullablePriceDetails = GHC.Maybe.Nothing,
      lineItemPricing'NonNullableType = GHC.Maybe.Nothing,
      lineItemPricing'NonNullableUnitAmountDecimal = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.line_item.properties.pricing.anyOf.properties.type@ in the specification.
--
-- The type of the pricing details.
data LineItemPricing'NonNullableType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    LineItemPricing'NonNullableType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    LineItemPricing'NonNullableType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"price_details"@
    LineItemPricing'NonNullableType'EnumPriceDetails
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON LineItemPricing'NonNullableType' where
  toJSON (LineItemPricing'NonNullableType'Other val) = val
  toJSON (LineItemPricing'NonNullableType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (LineItemPricing'NonNullableType'EnumPriceDetails) = "price_details"

instance Data.Aeson.Types.FromJSON.FromJSON LineItemPricing'NonNullableType' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "price_details" -> LineItemPricing'NonNullableType'EnumPriceDetails
          | GHC.Base.otherwise -> LineItemPricing'NonNullableType'Other val
      )

-- | Defines the oneOf schema located at @components.schemas.line_item.properties.subscription.anyOf@ in the specification.
data LineItemSubscription'NonNullableVariants
  = LineItemSubscription'NonNullableText Data.Text.Internal.Text
  | LineItemSubscription'NonNullableSubscription Subscription
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON LineItemSubscription'NonNullableVariants where
  toJSON (LineItemSubscription'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (LineItemSubscription'NonNullableSubscription a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON LineItemSubscription'NonNullableVariants where
  parseJSON val = case (LineItemSubscription'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((LineItemSubscription'NonNullableSubscription Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
