{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema IssuingTransactionFleetCardholderPromptData
module StripeAPI.Types.IssuingTransactionFleetCardholderPromptData where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.issuing_transaction_fleet_cardholder_prompt_data@ in the specification.
data IssuingTransactionFleetCardholderPromptData = IssuingTransactionFleetCardholderPromptData
  { -- | driver_id: Driver ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionFleetCardholderPromptDataDriverId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | odometer: Odometer reading.
    issuingTransactionFleetCardholderPromptDataOdometer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | unspecified_id: An alphanumeric ID. This field is used when a vehicle ID, driver ID, or generic ID is entered by the cardholder, but the merchant or card network did not specify the prompt type.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionFleetCardholderPromptDataUnspecifiedId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | user_id: User ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionFleetCardholderPromptDataUserId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | vehicle_number: Vehicle number.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionFleetCardholderPromptDataVehicleNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionFleetCardholderPromptData where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("driver_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetCardholderPromptDataDriverId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("odometer" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetCardholderPromptDataOdometer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unspecified_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetCardholderPromptDataUnspecifiedId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetCardholderPromptDataUserId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vehicle_number" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetCardholderPromptDataVehicleNumber obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("driver_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetCardholderPromptDataDriverId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("odometer" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetCardholderPromptDataOdometer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unspecified_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetCardholderPromptDataUnspecifiedId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetCardholderPromptDataUserId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vehicle_number" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetCardholderPromptDataVehicleNumber obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionFleetCardholderPromptData where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionFleetCardholderPromptData" (\obj -> ((((GHC.Base.pure IssuingTransactionFleetCardholderPromptData GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "driver_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "odometer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unspecified_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "vehicle_number"))

-- | Create a new 'IssuingTransactionFleetCardholderPromptData' with all required fields.
mkIssuingTransactionFleetCardholderPromptData :: IssuingTransactionFleetCardholderPromptData
mkIssuingTransactionFleetCardholderPromptData =
  IssuingTransactionFleetCardholderPromptData
    { issuingTransactionFleetCardholderPromptDataDriverId = GHC.Maybe.Nothing,
      issuingTransactionFleetCardholderPromptDataOdometer = GHC.Maybe.Nothing,
      issuingTransactionFleetCardholderPromptDataUnspecifiedId = GHC.Maybe.Nothing,
      issuingTransactionFleetCardholderPromptDataUserId = GHC.Maybe.Nothing,
      issuingTransactionFleetCardholderPromptDataVehicleNumber = GHC.Maybe.Nothing
    }
