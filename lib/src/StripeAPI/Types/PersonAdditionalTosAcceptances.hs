{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PersonAdditionalTosAcceptances
module StripeAPI.Types.PersonAdditionalTosAcceptances where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.PersonAdditionalTosAcceptance
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.person_additional_tos_acceptances@ in the specification.
data PersonAdditionalTosAcceptances = PersonAdditionalTosAcceptances
  { -- | account: Details on the legal guardian\'s acceptance of the main Stripe service agreement.
    personAdditionalTosAcceptancesAccount :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PersonAdditionalTosAcceptancesAccount'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PersonAdditionalTosAcceptances where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (personAdditionalTosAcceptancesAccount obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (personAdditionalTosAcceptancesAccount obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PersonAdditionalTosAcceptances where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PersonAdditionalTosAcceptances" (\obj -> GHC.Base.pure PersonAdditionalTosAcceptances GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account"))

-- | Create a new 'PersonAdditionalTosAcceptances' with all required fields.
mkPersonAdditionalTosAcceptances :: PersonAdditionalTosAcceptances
mkPersonAdditionalTosAcceptances = PersonAdditionalTosAcceptances {personAdditionalTosAcceptancesAccount = GHC.Maybe.Nothing}

-- | Defines the object schema located at @components.schemas.person_additional_tos_acceptances.properties.account.anyOf@ in the specification.
--
-- Details on the legal guardian\\\'s acceptance of the main Stripe service agreement.
data PersonAdditionalTosAcceptancesAccount'NonNullable = PersonAdditionalTosAcceptancesAccount'NonNullable
  { -- | date: The Unix timestamp marking when the legal guardian accepted the service agreement.
    personAdditionalTosAcceptancesAccount'NonNullableDate :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | ip: The IP address from which the legal guardian accepted the service agreement.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    personAdditionalTosAcceptancesAccount'NonNullableIp :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | user_agent: The user agent of the browser from which the legal guardian accepted the service agreement.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    personAdditionalTosAcceptancesAccount'NonNullableUserAgent :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PersonAdditionalTosAcceptancesAccount'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (personAdditionalTosAcceptancesAccount'NonNullableDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (personAdditionalTosAcceptancesAccount'NonNullableIp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (personAdditionalTosAcceptancesAccount'NonNullableUserAgent obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (personAdditionalTosAcceptancesAccount'NonNullableDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (personAdditionalTosAcceptancesAccount'NonNullableIp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (personAdditionalTosAcceptancesAccount'NonNullableUserAgent obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PersonAdditionalTosAcceptancesAccount'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PersonAdditionalTosAcceptancesAccount'NonNullable" (\obj -> ((GHC.Base.pure PersonAdditionalTosAcceptancesAccount'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_agent"))

-- | Create a new 'PersonAdditionalTosAcceptancesAccount'NonNullable' with all required fields.
mkPersonAdditionalTosAcceptancesAccount'NonNullable :: PersonAdditionalTosAcceptancesAccount'NonNullable
mkPersonAdditionalTosAcceptancesAccount'NonNullable =
  PersonAdditionalTosAcceptancesAccount'NonNullable
    { personAdditionalTosAcceptancesAccount'NonNullableDate = GHC.Maybe.Nothing,
      personAdditionalTosAcceptancesAccount'NonNullableIp = GHC.Maybe.Nothing,
      personAdditionalTosAcceptancesAccount'NonNullableUserAgent = GHC.Maybe.Nothing
    }
