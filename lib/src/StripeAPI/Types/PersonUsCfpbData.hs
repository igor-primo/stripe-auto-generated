{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PersonUsCfpbData
module StripeAPI.Types.PersonUsCfpbData where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.PersonEthnicityDetails
import {-# SOURCE #-} StripeAPI.Types.PersonRaceDetails
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.person_us_cfpb_data@ in the specification.
data PersonUsCfpbData = PersonUsCfpbData
  { -- | ethnicity_details: The persons ethnicity details
    personUsCfpbDataEthnicityDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PersonUsCfpbDataEthnicityDetails'NonNullable)),
    -- | race_details: The persons race details
    personUsCfpbDataRaceDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PersonUsCfpbDataRaceDetails'NonNullable)),
    -- | self_identified_gender: The persons self-identified gender
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    personUsCfpbDataSelfIdentifiedGender :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PersonUsCfpbData where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity_details" Data.Aeson.Types.ToJSON..=)) (personUsCfpbDataEthnicityDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race_details" Data.Aeson.Types.ToJSON..=)) (personUsCfpbDataRaceDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("self_identified_gender" Data.Aeson.Types.ToJSON..=)) (personUsCfpbDataSelfIdentifiedGender obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity_details" Data.Aeson.Types.ToJSON..=)) (personUsCfpbDataEthnicityDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race_details" Data.Aeson.Types.ToJSON..=)) (personUsCfpbDataRaceDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("self_identified_gender" Data.Aeson.Types.ToJSON..=)) (personUsCfpbDataSelfIdentifiedGender obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PersonUsCfpbData where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PersonUsCfpbData" (\obj -> ((GHC.Base.pure PersonUsCfpbData GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ethnicity_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "race_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "self_identified_gender"))

-- | Create a new 'PersonUsCfpbData' with all required fields.
mkPersonUsCfpbData :: PersonUsCfpbData
mkPersonUsCfpbData =
  PersonUsCfpbData
    { personUsCfpbDataEthnicityDetails = GHC.Maybe.Nothing,
      personUsCfpbDataRaceDetails = GHC.Maybe.Nothing,
      personUsCfpbDataSelfIdentifiedGender = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.person_us_cfpb_data.properties.ethnicity_details.anyOf@ in the specification.
--
-- The persons ethnicity details
data PersonUsCfpbDataEthnicityDetails'NonNullable = PersonUsCfpbDataEthnicityDetails'NonNullable
  { -- | ethnicity: The persons ethnicity
    personUsCfpbDataEthnicityDetails'NonNullableEthnicity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable [PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullable])),
    -- | ethnicity_other: Please specify your origin, when other is selected.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    personUsCfpbDataEthnicityDetails'NonNullableEthnicityOther :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PersonUsCfpbDataEthnicityDetails'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity" Data.Aeson.Types.ToJSON..=)) (personUsCfpbDataEthnicityDetails'NonNullableEthnicity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity_other" Data.Aeson.Types.ToJSON..=)) (personUsCfpbDataEthnicityDetails'NonNullableEthnicityOther obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity" Data.Aeson.Types.ToJSON..=)) (personUsCfpbDataEthnicityDetails'NonNullableEthnicity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ethnicity_other" Data.Aeson.Types.ToJSON..=)) (personUsCfpbDataEthnicityDetails'NonNullableEthnicityOther obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PersonUsCfpbDataEthnicityDetails'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PersonUsCfpbDataEthnicityDetails'NonNullable" (\obj -> (GHC.Base.pure PersonUsCfpbDataEthnicityDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ethnicity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ethnicity_other"))

-- | Create a new 'PersonUsCfpbDataEthnicityDetails'NonNullable' with all required fields.
mkPersonUsCfpbDataEthnicityDetails'NonNullable :: PersonUsCfpbDataEthnicityDetails'NonNullable
mkPersonUsCfpbDataEthnicityDetails'NonNullable =
  PersonUsCfpbDataEthnicityDetails'NonNullable
    { personUsCfpbDataEthnicityDetails'NonNullableEthnicity = GHC.Maybe.Nothing,
      personUsCfpbDataEthnicityDetails'NonNullableEthnicityOther = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.person_us_cfpb_data.properties.ethnicity_details.anyOf.properties.ethnicity.items@ in the specification.
data PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"cuban"@
    PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumCuban
  | -- | Represents the JSON value @"hispanic_or_latino"@
    PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumHispanicOrLatino
  | -- | Represents the JSON value @"mexican"@
    PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumMexican
  | -- | Represents the JSON value @"not_hispanic_or_latino"@
    PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumNotHispanicOrLatino
  | -- | Represents the JSON value @"other_hispanic_or_latino"@
    PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumOtherHispanicOrLatino
  | -- | Represents the JSON value @"prefer_not_to_answer"@
    PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumPreferNotToAnswer
  | -- | Represents the JSON value @"puerto_rican"@
    PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumPuertoRican
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullable where
  toJSON (PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableOther val) = val
  toJSON (PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumCuban) = "cuban"
  toJSON (PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumHispanicOrLatino) = "hispanic_or_latino"
  toJSON (PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumMexican) = "mexican"
  toJSON (PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumNotHispanicOrLatino) = "not_hispanic_or_latino"
  toJSON (PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumOtherHispanicOrLatino) = "other_hispanic_or_latino"
  toJSON (PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumPreferNotToAnswer) = "prefer_not_to_answer"
  toJSON (PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumPuertoRican) = "puerto_rican"

instance Data.Aeson.Types.FromJSON.FromJSON PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "cuban" -> PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumCuban
          | val GHC.Classes.== "hispanic_or_latino" -> PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumHispanicOrLatino
          | val GHC.Classes.== "mexican" -> PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumMexican
          | val GHC.Classes.== "not_hispanic_or_latino" -> PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumNotHispanicOrLatino
          | val GHC.Classes.== "other_hispanic_or_latino" -> PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumOtherHispanicOrLatino
          | val GHC.Classes.== "prefer_not_to_answer" -> PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumPreferNotToAnswer
          | val GHC.Classes.== "puerto_rican" -> PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableEnumPuertoRican
          | GHC.Base.otherwise -> PersonUsCfpbDataEthnicityDetails'NonNullableEthnicity'NonNullableOther val
      )

-- | Defines the object schema located at @components.schemas.person_us_cfpb_data.properties.race_details.anyOf@ in the specification.
--
-- The persons race details
data PersonUsCfpbDataRaceDetails'NonNullable = PersonUsCfpbDataRaceDetails'NonNullable
  { -- | race: The persons race.
    personUsCfpbDataRaceDetails'NonNullableRace :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable [PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullable])),
    -- | race_other: Please specify your race, when other is selected.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    personUsCfpbDataRaceDetails'NonNullableRaceOther :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PersonUsCfpbDataRaceDetails'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race" Data.Aeson.Types.ToJSON..=)) (personUsCfpbDataRaceDetails'NonNullableRace obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race_other" Data.Aeson.Types.ToJSON..=)) (personUsCfpbDataRaceDetails'NonNullableRaceOther obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race" Data.Aeson.Types.ToJSON..=)) (personUsCfpbDataRaceDetails'NonNullableRace obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("race_other" Data.Aeson.Types.ToJSON..=)) (personUsCfpbDataRaceDetails'NonNullableRaceOther obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PersonUsCfpbDataRaceDetails'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PersonUsCfpbDataRaceDetails'NonNullable" (\obj -> (GHC.Base.pure PersonUsCfpbDataRaceDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "race")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "race_other"))

-- | Create a new 'PersonUsCfpbDataRaceDetails'NonNullable' with all required fields.
mkPersonUsCfpbDataRaceDetails'NonNullable :: PersonUsCfpbDataRaceDetails'NonNullable
mkPersonUsCfpbDataRaceDetails'NonNullable =
  PersonUsCfpbDataRaceDetails'NonNullable
    { personUsCfpbDataRaceDetails'NonNullableRace = GHC.Maybe.Nothing,
      personUsCfpbDataRaceDetails'NonNullableRaceOther = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.person_us_cfpb_data.properties.race_details.anyOf.properties.race.items@ in the specification.
data PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"african_american"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumAfricanAmerican
  | -- | Represents the JSON value @"american_indian_or_alaska_native"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumAmericanIndianOrAlaskaNative
  | -- | Represents the JSON value @"asian"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumAsian
  | -- | Represents the JSON value @"asian_indian"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumAsianIndian
  | -- | Represents the JSON value @"black_or_african_american"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumBlackOrAfricanAmerican
  | -- | Represents the JSON value @"chinese"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumChinese
  | -- | Represents the JSON value @"ethiopian"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumEthiopian
  | -- | Represents the JSON value @"filipino"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumFilipino
  | -- | Represents the JSON value @"guamanian_or_chamorro"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumGuamanianOrChamorro
  | -- | Represents the JSON value @"haitian"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumHaitian
  | -- | Represents the JSON value @"jamaican"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumJamaican
  | -- | Represents the JSON value @"japanese"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumJapanese
  | -- | Represents the JSON value @"korean"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumKorean
  | -- | Represents the JSON value @"native_hawaiian"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumNativeHawaiian
  | -- | Represents the JSON value @"native_hawaiian_or_other_pacific_islander"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumNativeHawaiianOrOtherPacificIslander
  | -- | Represents the JSON value @"nigerian"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumNigerian
  | -- | Represents the JSON value @"other_asian"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumOtherAsian
  | -- | Represents the JSON value @"other_black_or_african_american"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumOtherBlackOrAfricanAmerican
  | -- | Represents the JSON value @"other_pacific_islander"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumOtherPacificIslander
  | -- | Represents the JSON value @"prefer_not_to_answer"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumPreferNotToAnswer
  | -- | Represents the JSON value @"samoan"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumSamoan
  | -- | Represents the JSON value @"somali"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumSomali
  | -- | Represents the JSON value @"vietnamese"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumVietnamese
  | -- | Represents the JSON value @"white"@
    PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumWhite
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullable where
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableOther val) = val
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumAfricanAmerican) = "african_american"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumAmericanIndianOrAlaskaNative) = "american_indian_or_alaska_native"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumAsian) = "asian"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumAsianIndian) = "asian_indian"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumBlackOrAfricanAmerican) = "black_or_african_american"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumChinese) = "chinese"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumEthiopian) = "ethiopian"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumFilipino) = "filipino"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumGuamanianOrChamorro) = "guamanian_or_chamorro"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumHaitian) = "haitian"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumJamaican) = "jamaican"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumJapanese) = "japanese"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumKorean) = "korean"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumNativeHawaiian) = "native_hawaiian"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumNativeHawaiianOrOtherPacificIslander) = "native_hawaiian_or_other_pacific_islander"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumNigerian) = "nigerian"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumOtherAsian) = "other_asian"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumOtherBlackOrAfricanAmerican) = "other_black_or_african_american"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumOtherPacificIslander) = "other_pacific_islander"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumPreferNotToAnswer) = "prefer_not_to_answer"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumSamoan) = "samoan"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumSomali) = "somali"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumVietnamese) = "vietnamese"
  toJSON (PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumWhite) = "white"

instance Data.Aeson.Types.FromJSON.FromJSON PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "african_american" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumAfricanAmerican
          | val GHC.Classes.== "american_indian_or_alaska_native" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumAmericanIndianOrAlaskaNative
          | val GHC.Classes.== "asian" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumAsian
          | val GHC.Classes.== "asian_indian" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumAsianIndian
          | val GHC.Classes.== "black_or_african_american" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumBlackOrAfricanAmerican
          | val GHC.Classes.== "chinese" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumChinese
          | val GHC.Classes.== "ethiopian" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumEthiopian
          | val GHC.Classes.== "filipino" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumFilipino
          | val GHC.Classes.== "guamanian_or_chamorro" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumGuamanianOrChamorro
          | val GHC.Classes.== "haitian" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumHaitian
          | val GHC.Classes.== "jamaican" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumJamaican
          | val GHC.Classes.== "japanese" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumJapanese
          | val GHC.Classes.== "korean" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumKorean
          | val GHC.Classes.== "native_hawaiian" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumNativeHawaiian
          | val GHC.Classes.== "native_hawaiian_or_other_pacific_islander" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumNativeHawaiianOrOtherPacificIslander
          | val GHC.Classes.== "nigerian" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumNigerian
          | val GHC.Classes.== "other_asian" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumOtherAsian
          | val GHC.Classes.== "other_black_or_african_american" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumOtherBlackOrAfricanAmerican
          | val GHC.Classes.== "other_pacific_islander" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumOtherPacificIslander
          | val GHC.Classes.== "prefer_not_to_answer" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumPreferNotToAnswer
          | val GHC.Classes.== "samoan" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumSamoan
          | val GHC.Classes.== "somali" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumSomali
          | val GHC.Classes.== "vietnamese" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumVietnamese
          | val GHC.Classes.== "white" -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableEnumWhite
          | GHC.Base.otherwise -> PersonUsCfpbDataRaceDetails'NonNullableRace'NonNullableOther val
      )
