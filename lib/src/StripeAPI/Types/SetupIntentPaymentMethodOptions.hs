{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema SetupIntentPaymentMethodOptions
module StripeAPI.Types.SetupIntentPaymentMethodOptions where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.LinkedAccountOptionsCommon
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodOptionsUsBankAccountMandateOptions
import {-# SOURCE #-} StripeAPI.Types.SetupIntentPaymentMethodOptionsAcssDebit
import {-# SOURCE #-} StripeAPI.Types.SetupIntentPaymentMethodOptionsBacsDebit
import {-# SOURCE #-} StripeAPI.Types.SetupIntentPaymentMethodOptionsCard
import {-# SOURCE #-} StripeAPI.Types.SetupIntentPaymentMethodOptionsCardMandateOptions
import {-# SOURCE #-} StripeAPI.Types.SetupIntentPaymentMethodOptionsKlarna
import {-# SOURCE #-} StripeAPI.Types.SetupIntentPaymentMethodOptionsMandateOptionsAcssDebit
import {-# SOURCE #-} StripeAPI.Types.SetupIntentPaymentMethodOptionsMandateOptionsBacsDebit
import {-# SOURCE #-} StripeAPI.Types.SetupIntentPaymentMethodOptionsMandateOptionsSepaDebit
import {-# SOURCE #-} StripeAPI.Types.SetupIntentPaymentMethodOptionsPaypal
import {-# SOURCE #-} StripeAPI.Types.SetupIntentPaymentMethodOptionsSepaDebit
import {-# SOURCE #-} StripeAPI.Types.SetupIntentPaymentMethodOptionsUsBankAccount
import {-# SOURCE #-} StripeAPI.Types.SetupIntentTypeSpecificPaymentMethodOptionsClient
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.setup_intent_payment_method_options@ in the specification.
data SetupIntentPaymentMethodOptions = SetupIntentPaymentMethodOptions
  { -- | acss_debit
    setupIntentPaymentMethodOptionsAcssDebit :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsAcssDebit'),
    -- | amazon_pay
    setupIntentPaymentMethodOptionsAmazonPay :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsAmazonPay'),
    -- | bacs_debit
    setupIntentPaymentMethodOptionsBacsDebit :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsBacsDebit'),
    -- | card
    setupIntentPaymentMethodOptionsCard :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsCard'),
    -- | card_present
    setupIntentPaymentMethodOptionsCardPresent :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsCardPresent'),
    -- | klarna
    setupIntentPaymentMethodOptionsKlarna :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsKlarna'),
    -- | link
    setupIntentPaymentMethodOptionsLink :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsLink'),
    -- | paypal
    setupIntentPaymentMethodOptionsPaypal :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsPaypal'),
    -- | sepa_debit
    setupIntentPaymentMethodOptionsSepaDebit :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsSepaDebit'),
    -- | us_bank_account
    setupIntentPaymentMethodOptionsUsBankAccount :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsUsBankAccount')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptions where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsAcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amazon_pay" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsAmazonPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsBacsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_present" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCardPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsKlarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsLink obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsPaypal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsSepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsUsBankAccount obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsAcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amazon_pay" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsAmazonPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsBacsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_present" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCardPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsKlarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsLink obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsPaypal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsSepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsUsBankAccount obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptions where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SetupIntentPaymentMethodOptions" (\obj -> (((((((((GHC.Base.pure SetupIntentPaymentMethodOptions GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acss_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amazon_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bacs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_present")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "klarna")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "link")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paypal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_bank_account"))

-- | Create a new 'SetupIntentPaymentMethodOptions' with all required fields.
mkSetupIntentPaymentMethodOptions :: SetupIntentPaymentMethodOptions
mkSetupIntentPaymentMethodOptions =
  SetupIntentPaymentMethodOptions
    { setupIntentPaymentMethodOptionsAcssDebit = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsAmazonPay = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsBacsDebit = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsCard = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsCardPresent = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsKlarna = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsLink = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsPaypal = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsSepaDebit = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsUsBankAccount = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.setup_intent_payment_method_options.properties.acss_debit.anyOf@ in the specification.
data SetupIntentPaymentMethodOptionsAcssDebit' = SetupIntentPaymentMethodOptionsAcssDebit'
  { -- | currency: Currency supported by the bank account
    setupIntentPaymentMethodOptionsAcssDebit'Currency :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullable)),
    -- | mandate_options:
    setupIntentPaymentMethodOptionsAcssDebit'MandateOptions :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsMandateOptionsAcssDebit),
    -- | verification_method: Bank account verification method.
    setupIntentPaymentMethodOptionsAcssDebit'VerificationMethod :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsAcssDebit' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsAcssDebit'Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_options" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsAcssDebit'MandateOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsAcssDebit'VerificationMethod obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsAcssDebit'Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_options" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsAcssDebit'MandateOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsAcssDebit'VerificationMethod obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsAcssDebit' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SetupIntentPaymentMethodOptionsAcssDebit'" (\obj -> ((GHC.Base.pure SetupIntentPaymentMethodOptionsAcssDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mandate_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_method"))

-- | Create a new 'SetupIntentPaymentMethodOptionsAcssDebit'' with all required fields.
mkSetupIntentPaymentMethodOptionsAcssDebit' :: SetupIntentPaymentMethodOptionsAcssDebit'
mkSetupIntentPaymentMethodOptionsAcssDebit' =
  SetupIntentPaymentMethodOptionsAcssDebit'
    { setupIntentPaymentMethodOptionsAcssDebit'Currency = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsAcssDebit'MandateOptions = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsAcssDebit'VerificationMethod = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.acss_debit.anyOf.properties.currency@ in the specification.
--
-- Currency supported by the bank account
data SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"cad"@
    SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullableEnumCad
  | -- | Represents the JSON value @"usd"@
    SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullableEnumUsd
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullable where
  toJSON (SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullableOther val) = val
  toJSON (SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullableEnumCad) = "cad"
  toJSON (SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullableEnumUsd) = "usd"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "cad" -> SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullableEnumCad
          | val GHC.Classes.== "usd" -> SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullableEnumUsd
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsAcssDebit'Currency'NonNullableOther val
      )

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.acss_debit.anyOf.properties.verification_method@ in the specification.
--
-- Bank account verification method.
data SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"automatic"@
    SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'EnumAutomatic
  | -- | Represents the JSON value @"instant"@
    SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'EnumInstant
  | -- | Represents the JSON value @"microdeposits"@
    SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'EnumMicrodeposits
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod' where
  toJSON (SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'Other val) = val
  toJSON (SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'EnumAutomatic) = "automatic"
  toJSON (SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'EnumInstant) = "instant"
  toJSON (SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'EnumMicrodeposits) = "microdeposits"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "automatic" -> SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'EnumAutomatic
          | val GHC.Classes.== "instant" -> SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'EnumInstant
          | val GHC.Classes.== "microdeposits" -> SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'EnumMicrodeposits
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsAcssDebit'VerificationMethod'Other val
      )

-- | Defines the object schema located at @components.schemas.setup_intent_payment_method_options.properties.amazon_pay.anyOf@ in the specification.
data SetupIntentPaymentMethodOptionsAmazonPay' = SetupIntentPaymentMethodOptionsAmazonPay'
  { -- | verification_method: Bank account verification method.
    setupIntentPaymentMethodOptionsAmazonPay'VerificationMethod :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsAmazonPay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsAmazonPay'VerificationMethod obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsAmazonPay'VerificationMethod obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsAmazonPay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SetupIntentPaymentMethodOptionsAmazonPay'" (\obj -> GHC.Base.pure SetupIntentPaymentMethodOptionsAmazonPay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_method"))

-- | Create a new 'SetupIntentPaymentMethodOptionsAmazonPay'' with all required fields.
mkSetupIntentPaymentMethodOptionsAmazonPay' :: SetupIntentPaymentMethodOptionsAmazonPay'
mkSetupIntentPaymentMethodOptionsAmazonPay' = SetupIntentPaymentMethodOptionsAmazonPay' {setupIntentPaymentMethodOptionsAmazonPay'VerificationMethod = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.amazon_pay.anyOf.properties.verification_method@ in the specification.
--
-- Bank account verification method.
data SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"automatic"@
    SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'EnumAutomatic
  | -- | Represents the JSON value @"instant"@
    SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'EnumInstant
  | -- | Represents the JSON value @"microdeposits"@
    SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'EnumMicrodeposits
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod' where
  toJSON (SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'Other val) = val
  toJSON (SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'EnumAutomatic) = "automatic"
  toJSON (SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'EnumInstant) = "instant"
  toJSON (SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'EnumMicrodeposits) = "microdeposits"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "automatic" -> SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'EnumAutomatic
          | val GHC.Classes.== "instant" -> SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'EnumInstant
          | val GHC.Classes.== "microdeposits" -> SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'EnumMicrodeposits
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsAmazonPay'VerificationMethod'Other val
      )

-- | Defines the object schema located at @components.schemas.setup_intent_payment_method_options.properties.bacs_debit.anyOf@ in the specification.
data SetupIntentPaymentMethodOptionsBacsDebit' = SetupIntentPaymentMethodOptionsBacsDebit'
  { -- | mandate_options:
    setupIntentPaymentMethodOptionsBacsDebit'MandateOptions :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsMandateOptionsBacsDebit),
    -- | verification_method: Bank account verification method.
    setupIntentPaymentMethodOptionsBacsDebit'VerificationMethod :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsBacsDebit' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_options" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsBacsDebit'MandateOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsBacsDebit'VerificationMethod obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_options" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsBacsDebit'MandateOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsBacsDebit'VerificationMethod obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsBacsDebit' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SetupIntentPaymentMethodOptionsBacsDebit'" (\obj -> (GHC.Base.pure SetupIntentPaymentMethodOptionsBacsDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mandate_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_method"))

-- | Create a new 'SetupIntentPaymentMethodOptionsBacsDebit'' with all required fields.
mkSetupIntentPaymentMethodOptionsBacsDebit' :: SetupIntentPaymentMethodOptionsBacsDebit'
mkSetupIntentPaymentMethodOptionsBacsDebit' =
  SetupIntentPaymentMethodOptionsBacsDebit'
    { setupIntentPaymentMethodOptionsBacsDebit'MandateOptions = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsBacsDebit'VerificationMethod = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.bacs_debit.anyOf.properties.verification_method@ in the specification.
--
-- Bank account verification method.
data SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"automatic"@
    SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'EnumAutomatic
  | -- | Represents the JSON value @"instant"@
    SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'EnumInstant
  | -- | Represents the JSON value @"microdeposits"@
    SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'EnumMicrodeposits
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod' where
  toJSON (SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'Other val) = val
  toJSON (SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'EnumAutomatic) = "automatic"
  toJSON (SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'EnumInstant) = "instant"
  toJSON (SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'EnumMicrodeposits) = "microdeposits"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "automatic" -> SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'EnumAutomatic
          | val GHC.Classes.== "instant" -> SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'EnumInstant
          | val GHC.Classes.== "microdeposits" -> SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'EnumMicrodeposits
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsBacsDebit'VerificationMethod'Other val
      )

-- | Defines the object schema located at @components.schemas.setup_intent_payment_method_options.properties.card.anyOf@ in the specification.
data SetupIntentPaymentMethodOptionsCard' = SetupIntentPaymentMethodOptionsCard'
  { -- | mandate_options: Configuration options for setting up an eMandate for cards issued in India.
    setupIntentPaymentMethodOptionsCard'MandateOptions :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullable)),
    -- | network: Selected network to process this SetupIntent on. Depends on the available networks of the card attached to the setup intent. Can be only set confirm-time.
    setupIntentPaymentMethodOptionsCard'Network :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable SetupIntentPaymentMethodOptionsCard'Network'NonNullable)),
    -- | request_three_d_secure: We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https:\/\/stripe.com\/docs\/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. If not provided, this value defaults to \`automatic\`. Read our guide on [manually requesting 3D Secure](https:\/\/stripe.com\/docs\/payments\/3d-secure\/authentication-flow\#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
    setupIntentPaymentMethodOptionsCard'RequestThreeDSecure :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullable)),
    -- | verification_method: Bank account verification method.
    setupIntentPaymentMethodOptionsCard'VerificationMethod :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsCard'VerificationMethod')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsCard' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_options" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'Network obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("request_three_d_secure" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'RequestThreeDSecure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'VerificationMethod obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_options" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'Network obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("request_three_d_secure" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'RequestThreeDSecure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'VerificationMethod obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsCard' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SetupIntentPaymentMethodOptionsCard'" (\obj -> (((GHC.Base.pure SetupIntentPaymentMethodOptionsCard' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mandate_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "network")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "request_three_d_secure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_method"))

-- | Create a new 'SetupIntentPaymentMethodOptionsCard'' with all required fields.
mkSetupIntentPaymentMethodOptionsCard' :: SetupIntentPaymentMethodOptionsCard'
mkSetupIntentPaymentMethodOptionsCard' =
  SetupIntentPaymentMethodOptionsCard'
    { setupIntentPaymentMethodOptionsCard'MandateOptions = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsCard'Network = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsCard'RequestThreeDSecure = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsCard'VerificationMethod = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.setup_intent_payment_method_options.properties.card.anyOf.properties.mandate_options.anyOf@ in the specification.
--
-- Configuration options for setting up an eMandate for cards issued in India.
data SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullable = SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullable
  { -- | amount: Amount to be charged for future payments.
    setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | amount_type: One of \`fixed\` or \`maximum\`. If \`fixed\`, the \`amount\` param refers to the exact amount to be charged in future payments. If \`maximum\`, the amount charged can be up to the value passed for the \`amount\` param.
    setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType'),
    -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
    setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | description: A description of the mandate or subscription that is meant to be displayed to the customer.
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableDescription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | end_date: End date of the mandate or subscription. If not provided, the mandate will be active until canceled. If provided, end date should be after start date.
    setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableEndDate :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | interval: Specifies payment frequency. One of \`day\`, \`week\`, \`month\`, \`year\`, or \`sporadic\`.
    setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'),
    -- | interval_count: The number of intervals between payments. For example, \`interval=month\` and \`interval_count=3\` indicates one payment every three months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks). This parameter is optional when \`interval=sporadic\`.
    setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableIntervalCount :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | reference: Unique identifier for the mandate or subscription.
    --
    -- Constraints:
    --
    -- * Maximum length of 80
    setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableReference :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | start_date: Start date of the mandate or subscription. Start date should not be lesser than yesterday.
    setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableStartDate :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | supported_types: Specifies the type of mandates supported. Possible values are \`india\`.
    setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable [SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes'NonNullable]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_type" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("end_date" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableEndDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interval" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interval_count" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableIntervalCount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableReference obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("start_date" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableStartDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("supported_types" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_type" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("end_date" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableEndDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interval" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interval_count" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableIntervalCount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableReference obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("start_date" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableStartDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("supported_types" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullable" (\obj -> (((((((((GHC.Base.pure SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "end_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "interval")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "interval_count")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reference")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "start_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "supported_types"))

-- | Create a new 'SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullable' with all required fields.
mkSetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullable :: SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullable
mkSetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullable =
  SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullable
    { setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmount = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableCurrency = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableDescription = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableEndDate = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableIntervalCount = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableReference = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableStartDate = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.card.anyOf.properties.mandate_options.anyOf.properties.amount_type@ in the specification.
--
-- One of \`fixed\` or \`maximum\`. If \`fixed\`, the \`amount\` param refers to the exact amount to be charged in future payments. If \`maximum\`, the amount charged can be up to the value passed for the \`amount\` param.
data SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"fixed"@
    SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType'EnumFixed
  | -- | Represents the JSON value @"maximum"@
    SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType'EnumMaximum
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType' where
  toJSON (SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType'Other val) = val
  toJSON (SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType'EnumFixed) = "fixed"
  toJSON (SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType'EnumMaximum) = "maximum"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "fixed" -> SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType'EnumFixed
          | val GHC.Classes.== "maximum" -> SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType'EnumMaximum
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableAmountType'Other val
      )

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.card.anyOf.properties.mandate_options.anyOf.properties.interval@ in the specification.
--
-- Specifies payment frequency. One of \`day\`, \`week\`, \`month\`, \`year\`, or \`sporadic\`.
data SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"day"@
    SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumDay
  | -- | Represents the JSON value @"month"@
    SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumMonth
  | -- | Represents the JSON value @"sporadic"@
    SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumSporadic
  | -- | Represents the JSON value @"week"@
    SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumWeek
  | -- | Represents the JSON value @"year"@
    SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumYear
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval' where
  toJSON (SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'Other val) = val
  toJSON (SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumDay) = "day"
  toJSON (SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumMonth) = "month"
  toJSON (SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumSporadic) = "sporadic"
  toJSON (SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumWeek) = "week"
  toJSON (SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumYear) = "year"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "day" -> SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumDay
          | val GHC.Classes.== "month" -> SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumMonth
          | val GHC.Classes.== "sporadic" -> SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumSporadic
          | val GHC.Classes.== "week" -> SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumWeek
          | val GHC.Classes.== "year" -> SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'EnumYear
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableInterval'Other val
      )

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.card.anyOf.properties.mandate_options.anyOf.properties.supported_types.items@ in the specification.
data SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"india"@
    SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes'NonNullableEnumIndia
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes'NonNullable where
  toJSON (SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes'NonNullableOther val) = val
  toJSON (SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes'NonNullableEnumIndia) = "india"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "india" -> SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes'NonNullableEnumIndia
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsCard'MandateOptions'NonNullableSupportedTypes'NonNullableOther val
      )

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.card.anyOf.properties.network@ in the specification.
--
-- Selected network to process this SetupIntent on. Depends on the available networks of the card attached to the setup intent. Can be only set confirm-time.
data SetupIntentPaymentMethodOptionsCard'Network'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"amex"@
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumAmex
  | -- | Represents the JSON value @"cartes_bancaires"@
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumCartesBancaires
  | -- | Represents the JSON value @"diners"@
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumDiners
  | -- | Represents the JSON value @"discover"@
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumDiscover
  | -- | Represents the JSON value @"eftpos_au"@
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumEftposAu
  | -- | Represents the JSON value @"girocard"@
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumGirocard
  | -- | Represents the JSON value @"interac"@
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumInterac
  | -- | Represents the JSON value @"jcb"@
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumJcb
  | -- | Represents the JSON value @"link"@
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumLink
  | -- | Represents the JSON value @"mastercard"@
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumMastercard
  | -- | Represents the JSON value @"unionpay"@
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumUnionpay
  | -- | Represents the JSON value @"unknown"@
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumUnknown
  | -- | Represents the JSON value @"visa"@
    SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumVisa
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsCard'Network'NonNullable where
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableOther val) = val
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumAmex) = "amex"
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumCartesBancaires) = "cartes_bancaires"
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumDiners) = "diners"
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumDiscover) = "discover"
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumEftposAu) = "eftpos_au"
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumGirocard) = "girocard"
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumInterac) = "interac"
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumJcb) = "jcb"
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumLink) = "link"
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumMastercard) = "mastercard"
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumUnionpay) = "unionpay"
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumUnknown) = "unknown"
  toJSON (SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumVisa) = "visa"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsCard'Network'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "amex" -> SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumAmex
          | val GHC.Classes.== "cartes_bancaires" -> SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumCartesBancaires
          | val GHC.Classes.== "diners" -> SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumDiners
          | val GHC.Classes.== "discover" -> SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumDiscover
          | val GHC.Classes.== "eftpos_au" -> SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumEftposAu
          | val GHC.Classes.== "girocard" -> SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumGirocard
          | val GHC.Classes.== "interac" -> SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumInterac
          | val GHC.Classes.== "jcb" -> SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumJcb
          | val GHC.Classes.== "link" -> SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumLink
          | val GHC.Classes.== "mastercard" -> SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumMastercard
          | val GHC.Classes.== "unionpay" -> SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumUnionpay
          | val GHC.Classes.== "unknown" -> SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumUnknown
          | val GHC.Classes.== "visa" -> SetupIntentPaymentMethodOptionsCard'Network'NonNullableEnumVisa
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsCard'Network'NonNullableOther val
      )

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.card.anyOf.properties.request_three_d_secure@ in the specification.
--
-- We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https:\/\/stripe.com\/docs\/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. If not provided, this value defaults to \`automatic\`. Read our guide on [manually requesting 3D Secure](https:\/\/stripe.com\/docs\/payments\/3d-secure\/authentication-flow\#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
data SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"any"@
    SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullableEnumAny
  | -- | Represents the JSON value @"automatic"@
    SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullableEnumAutomatic
  | -- | Represents the JSON value @"challenge"@
    SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullableEnumChallenge
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullable where
  toJSON (SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullableOther val) = val
  toJSON (SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullableEnumAny) = "any"
  toJSON (SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullableEnumAutomatic) = "automatic"
  toJSON (SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullableEnumChallenge) = "challenge"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "any" -> SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullableEnumAny
          | val GHC.Classes.== "automatic" -> SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullableEnumAutomatic
          | val GHC.Classes.== "challenge" -> SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullableEnumChallenge
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsCard'RequestThreeDSecure'NonNullableOther val
      )

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.card.anyOf.properties.verification_method@ in the specification.
--
-- Bank account verification method.
data SetupIntentPaymentMethodOptionsCard'VerificationMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsCard'VerificationMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsCard'VerificationMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"automatic"@
    SetupIntentPaymentMethodOptionsCard'VerificationMethod'EnumAutomatic
  | -- | Represents the JSON value @"instant"@
    SetupIntentPaymentMethodOptionsCard'VerificationMethod'EnumInstant
  | -- | Represents the JSON value @"microdeposits"@
    SetupIntentPaymentMethodOptionsCard'VerificationMethod'EnumMicrodeposits
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsCard'VerificationMethod' where
  toJSON (SetupIntentPaymentMethodOptionsCard'VerificationMethod'Other val) = val
  toJSON (SetupIntentPaymentMethodOptionsCard'VerificationMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsCard'VerificationMethod'EnumAutomatic) = "automatic"
  toJSON (SetupIntentPaymentMethodOptionsCard'VerificationMethod'EnumInstant) = "instant"
  toJSON (SetupIntentPaymentMethodOptionsCard'VerificationMethod'EnumMicrodeposits) = "microdeposits"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsCard'VerificationMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "automatic" -> SetupIntentPaymentMethodOptionsCard'VerificationMethod'EnumAutomatic
          | val GHC.Classes.== "instant" -> SetupIntentPaymentMethodOptionsCard'VerificationMethod'EnumInstant
          | val GHC.Classes.== "microdeposits" -> SetupIntentPaymentMethodOptionsCard'VerificationMethod'EnumMicrodeposits
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsCard'VerificationMethod'Other val
      )

-- | Defines the object schema located at @components.schemas.setup_intent_payment_method_options.properties.card_present.anyOf@ in the specification.
data SetupIntentPaymentMethodOptionsCardPresent' = SetupIntentPaymentMethodOptionsCardPresent'
  { -- | verification_method: Bank account verification method.
    setupIntentPaymentMethodOptionsCardPresent'VerificationMethod :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsCardPresent' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCardPresent'VerificationMethod obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsCardPresent'VerificationMethod obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsCardPresent' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SetupIntentPaymentMethodOptionsCardPresent'" (\obj -> GHC.Base.pure SetupIntentPaymentMethodOptionsCardPresent' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_method"))

-- | Create a new 'SetupIntentPaymentMethodOptionsCardPresent'' with all required fields.
mkSetupIntentPaymentMethodOptionsCardPresent' :: SetupIntentPaymentMethodOptionsCardPresent'
mkSetupIntentPaymentMethodOptionsCardPresent' = SetupIntentPaymentMethodOptionsCardPresent' {setupIntentPaymentMethodOptionsCardPresent'VerificationMethod = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.card_present.anyOf.properties.verification_method@ in the specification.
--
-- Bank account verification method.
data SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"automatic"@
    SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'EnumAutomatic
  | -- | Represents the JSON value @"instant"@
    SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'EnumInstant
  | -- | Represents the JSON value @"microdeposits"@
    SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'EnumMicrodeposits
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod' where
  toJSON (SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'Other val) = val
  toJSON (SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'EnumAutomatic) = "automatic"
  toJSON (SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'EnumInstant) = "instant"
  toJSON (SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'EnumMicrodeposits) = "microdeposits"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "automatic" -> SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'EnumAutomatic
          | val GHC.Classes.== "instant" -> SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'EnumInstant
          | val GHC.Classes.== "microdeposits" -> SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'EnumMicrodeposits
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsCardPresent'VerificationMethod'Other val
      )

-- | Defines the object schema located at @components.schemas.setup_intent_payment_method_options.properties.klarna.anyOf@ in the specification.
data SetupIntentPaymentMethodOptionsKlarna' = SetupIntentPaymentMethodOptionsKlarna'
  { -- | currency: The currency of the setup intent. Three letter ISO currency code.
    setupIntentPaymentMethodOptionsKlarna'Currency :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | preferred_locale: Preferred locale of the Klarna checkout page that the customer is redirected to.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    setupIntentPaymentMethodOptionsKlarna'PreferredLocale :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | verification_method: Bank account verification method.
    setupIntentPaymentMethodOptionsKlarna'VerificationMethod :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsKlarna'VerificationMethod')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsKlarna' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsKlarna'Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_locale" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsKlarna'PreferredLocale obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsKlarna'VerificationMethod obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsKlarna'Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_locale" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsKlarna'PreferredLocale obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsKlarna'VerificationMethod obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsKlarna' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SetupIntentPaymentMethodOptionsKlarna'" (\obj -> ((GHC.Base.pure SetupIntentPaymentMethodOptionsKlarna' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preferred_locale")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_method"))

-- | Create a new 'SetupIntentPaymentMethodOptionsKlarna'' with all required fields.
mkSetupIntentPaymentMethodOptionsKlarna' :: SetupIntentPaymentMethodOptionsKlarna'
mkSetupIntentPaymentMethodOptionsKlarna' =
  SetupIntentPaymentMethodOptionsKlarna'
    { setupIntentPaymentMethodOptionsKlarna'Currency = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsKlarna'PreferredLocale = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsKlarna'VerificationMethod = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.klarna.anyOf.properties.verification_method@ in the specification.
--
-- Bank account verification method.
data SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"automatic"@
    SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'EnumAutomatic
  | -- | Represents the JSON value @"instant"@
    SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'EnumInstant
  | -- | Represents the JSON value @"microdeposits"@
    SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'EnumMicrodeposits
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsKlarna'VerificationMethod' where
  toJSON (SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'Other val) = val
  toJSON (SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'EnumAutomatic) = "automatic"
  toJSON (SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'EnumInstant) = "instant"
  toJSON (SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'EnumMicrodeposits) = "microdeposits"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsKlarna'VerificationMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "automatic" -> SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'EnumAutomatic
          | val GHC.Classes.== "instant" -> SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'EnumInstant
          | val GHC.Classes.== "microdeposits" -> SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'EnumMicrodeposits
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsKlarna'VerificationMethod'Other val
      )

-- | Defines the object schema located at @components.schemas.setup_intent_payment_method_options.properties.link.anyOf@ in the specification.
data SetupIntentPaymentMethodOptionsLink' = SetupIntentPaymentMethodOptionsLink'
  { -- | verification_method: Bank account verification method.
    setupIntentPaymentMethodOptionsLink'VerificationMethod :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsLink'VerificationMethod')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsLink' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsLink'VerificationMethod obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsLink'VerificationMethod obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsLink' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SetupIntentPaymentMethodOptionsLink'" (\obj -> GHC.Base.pure SetupIntentPaymentMethodOptionsLink' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_method"))

-- | Create a new 'SetupIntentPaymentMethodOptionsLink'' with all required fields.
mkSetupIntentPaymentMethodOptionsLink' :: SetupIntentPaymentMethodOptionsLink'
mkSetupIntentPaymentMethodOptionsLink' = SetupIntentPaymentMethodOptionsLink' {setupIntentPaymentMethodOptionsLink'VerificationMethod = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.link.anyOf.properties.verification_method@ in the specification.
--
-- Bank account verification method.
data SetupIntentPaymentMethodOptionsLink'VerificationMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsLink'VerificationMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsLink'VerificationMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"automatic"@
    SetupIntentPaymentMethodOptionsLink'VerificationMethod'EnumAutomatic
  | -- | Represents the JSON value @"instant"@
    SetupIntentPaymentMethodOptionsLink'VerificationMethod'EnumInstant
  | -- | Represents the JSON value @"microdeposits"@
    SetupIntentPaymentMethodOptionsLink'VerificationMethod'EnumMicrodeposits
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsLink'VerificationMethod' where
  toJSON (SetupIntentPaymentMethodOptionsLink'VerificationMethod'Other val) = val
  toJSON (SetupIntentPaymentMethodOptionsLink'VerificationMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsLink'VerificationMethod'EnumAutomatic) = "automatic"
  toJSON (SetupIntentPaymentMethodOptionsLink'VerificationMethod'EnumInstant) = "instant"
  toJSON (SetupIntentPaymentMethodOptionsLink'VerificationMethod'EnumMicrodeposits) = "microdeposits"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsLink'VerificationMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "automatic" -> SetupIntentPaymentMethodOptionsLink'VerificationMethod'EnumAutomatic
          | val GHC.Classes.== "instant" -> SetupIntentPaymentMethodOptionsLink'VerificationMethod'EnumInstant
          | val GHC.Classes.== "microdeposits" -> SetupIntentPaymentMethodOptionsLink'VerificationMethod'EnumMicrodeposits
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsLink'VerificationMethod'Other val
      )

-- | Defines the object schema located at @components.schemas.setup_intent_payment_method_options.properties.paypal.anyOf@ in the specification.
data SetupIntentPaymentMethodOptionsPaypal' = SetupIntentPaymentMethodOptionsPaypal'
  { -- | billing_agreement_id: The PayPal Billing Agreement ID (BAID). This is an ID generated by PayPal which represents the mandate between the merchant and the customer.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    setupIntentPaymentMethodOptionsPaypal'BillingAgreementId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | verification_method: Bank account verification method.
    setupIntentPaymentMethodOptionsPaypal'VerificationMethod :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsPaypal'VerificationMethod')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsPaypal' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_agreement_id" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsPaypal'BillingAgreementId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsPaypal'VerificationMethod obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_agreement_id" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsPaypal'BillingAgreementId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsPaypal'VerificationMethod obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsPaypal' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SetupIntentPaymentMethodOptionsPaypal'" (\obj -> (GHC.Base.pure SetupIntentPaymentMethodOptionsPaypal' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "billing_agreement_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_method"))

-- | Create a new 'SetupIntentPaymentMethodOptionsPaypal'' with all required fields.
mkSetupIntentPaymentMethodOptionsPaypal' :: SetupIntentPaymentMethodOptionsPaypal'
mkSetupIntentPaymentMethodOptionsPaypal' =
  SetupIntentPaymentMethodOptionsPaypal'
    { setupIntentPaymentMethodOptionsPaypal'BillingAgreementId = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsPaypal'VerificationMethod = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.paypal.anyOf.properties.verification_method@ in the specification.
--
-- Bank account verification method.
data SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"automatic"@
    SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'EnumAutomatic
  | -- | Represents the JSON value @"instant"@
    SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'EnumInstant
  | -- | Represents the JSON value @"microdeposits"@
    SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'EnumMicrodeposits
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsPaypal'VerificationMethod' where
  toJSON (SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'Other val) = val
  toJSON (SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'EnumAutomatic) = "automatic"
  toJSON (SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'EnumInstant) = "instant"
  toJSON (SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'EnumMicrodeposits) = "microdeposits"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsPaypal'VerificationMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "automatic" -> SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'EnumAutomatic
          | val GHC.Classes.== "instant" -> SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'EnumInstant
          | val GHC.Classes.== "microdeposits" -> SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'EnumMicrodeposits
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsPaypal'VerificationMethod'Other val
      )

-- | Defines the object schema located at @components.schemas.setup_intent_payment_method_options.properties.sepa_debit.anyOf@ in the specification.
data SetupIntentPaymentMethodOptionsSepaDebit' = SetupIntentPaymentMethodOptionsSepaDebit'
  { -- | mandate_options:
    setupIntentPaymentMethodOptionsSepaDebit'MandateOptions :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsMandateOptionsSepaDebit),
    -- | verification_method: Bank account verification method.
    setupIntentPaymentMethodOptionsSepaDebit'VerificationMethod :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsSepaDebit' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_options" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsSepaDebit'MandateOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsSepaDebit'VerificationMethod obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_options" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsSepaDebit'MandateOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsSepaDebit'VerificationMethod obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsSepaDebit' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SetupIntentPaymentMethodOptionsSepaDebit'" (\obj -> (GHC.Base.pure SetupIntentPaymentMethodOptionsSepaDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mandate_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_method"))

-- | Create a new 'SetupIntentPaymentMethodOptionsSepaDebit'' with all required fields.
mkSetupIntentPaymentMethodOptionsSepaDebit' :: SetupIntentPaymentMethodOptionsSepaDebit'
mkSetupIntentPaymentMethodOptionsSepaDebit' =
  SetupIntentPaymentMethodOptionsSepaDebit'
    { setupIntentPaymentMethodOptionsSepaDebit'MandateOptions = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsSepaDebit'VerificationMethod = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.sepa_debit.anyOf.properties.verification_method@ in the specification.
--
-- Bank account verification method.
data SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"automatic"@
    SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'EnumAutomatic
  | -- | Represents the JSON value @"instant"@
    SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'EnumInstant
  | -- | Represents the JSON value @"microdeposits"@
    SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'EnumMicrodeposits
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod' where
  toJSON (SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'Other val) = val
  toJSON (SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'EnumAutomatic) = "automatic"
  toJSON (SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'EnumInstant) = "instant"
  toJSON (SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'EnumMicrodeposits) = "microdeposits"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "automatic" -> SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'EnumAutomatic
          | val GHC.Classes.== "instant" -> SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'EnumInstant
          | val GHC.Classes.== "microdeposits" -> SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'EnumMicrodeposits
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsSepaDebit'VerificationMethod'Other val
      )

-- | Defines the object schema located at @components.schemas.setup_intent_payment_method_options.properties.us_bank_account.anyOf@ in the specification.
data SetupIntentPaymentMethodOptionsUsBankAccount' = SetupIntentPaymentMethodOptionsUsBankAccount'
  { -- | financial_connections:
    setupIntentPaymentMethodOptionsUsBankAccount'FinancialConnections :: (GHC.Maybe.Maybe LinkedAccountOptionsCommon),
    -- | mandate_options:
    setupIntentPaymentMethodOptionsUsBankAccount'MandateOptions :: (GHC.Maybe.Maybe PaymentMethodOptionsUsBankAccountMandateOptions),
    -- | verification_method: Bank account verification method.
    setupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod :: (GHC.Maybe.Maybe SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsUsBankAccount' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_connections" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsUsBankAccount'FinancialConnections obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_options" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsUsBankAccount'MandateOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_connections" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsUsBankAccount'FinancialConnections obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_options" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsUsBankAccount'MandateOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (setupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsUsBankAccount' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SetupIntentPaymentMethodOptionsUsBankAccount'" (\obj -> ((GHC.Base.pure SetupIntentPaymentMethodOptionsUsBankAccount' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "financial_connections")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mandate_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_method"))

-- | Create a new 'SetupIntentPaymentMethodOptionsUsBankAccount'' with all required fields.
mkSetupIntentPaymentMethodOptionsUsBankAccount' :: SetupIntentPaymentMethodOptionsUsBankAccount'
mkSetupIntentPaymentMethodOptionsUsBankAccount' =
  SetupIntentPaymentMethodOptionsUsBankAccount'
    { setupIntentPaymentMethodOptionsUsBankAccount'FinancialConnections = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsUsBankAccount'MandateOptions = GHC.Maybe.Nothing,
      setupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.setup_intent_payment_method_options.properties.us_bank_account.anyOf.properties.verification_method@ in the specification.
--
-- Bank account verification method.
data SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"automatic"@
    SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'EnumAutomatic
  | -- | Represents the JSON value @"instant"@
    SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'EnumInstant
  | -- | Represents the JSON value @"microdeposits"@
    SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'EnumMicrodeposits
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod' where
  toJSON (SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'Other val) = val
  toJSON (SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'EnumAutomatic) = "automatic"
  toJSON (SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'EnumInstant) = "instant"
  toJSON (SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'EnumMicrodeposits) = "microdeposits"

instance Data.Aeson.Types.FromJSON.FromJSON SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "automatic" -> SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'EnumAutomatic
          | val GHC.Classes.== "instant" -> SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'EnumInstant
          | val GHC.Classes.== "microdeposits" -> SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'EnumMicrodeposits
          | GHC.Base.otherwise -> SetupIntentPaymentMethodOptionsUsBankAccount'VerificationMethod'Other val
      )
