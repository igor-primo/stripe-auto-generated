{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentPagesCheckoutSessionOptionalItem
module StripeAPI.Types.PaymentPagesCheckoutSessionOptionalItem where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionOptionalItemAdjustableQuantity
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_pages_checkout_session_optional_item@ in the specification.
data PaymentPagesCheckoutSessionOptionalItem = PaymentPagesCheckoutSessionOptionalItem
  { -- | adjustable_quantity
    paymentPagesCheckoutSessionOptionalItemAdjustableQuantity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PaymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullable)),
    -- | price
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentPagesCheckoutSessionOptionalItemPrice :: Data.Text.Internal.Text,
    -- | quantity
    paymentPagesCheckoutSessionOptionalItemQuantity :: GHC.Types.Int
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentPagesCheckoutSessionOptionalItem where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("adjustable_quantity" Data.Aeson.Types.ToJSON..=)) (paymentPagesCheckoutSessionOptionalItemAdjustableQuantity obj) : ["price" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionOptionalItemPrice obj] : ["quantity" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionOptionalItemQuantity obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("adjustable_quantity" Data.Aeson.Types.ToJSON..=)) (paymentPagesCheckoutSessionOptionalItemAdjustableQuantity obj) : ["price" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionOptionalItemPrice obj] : ["quantity" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionOptionalItemQuantity obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentPagesCheckoutSessionOptionalItem where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentPagesCheckoutSessionOptionalItem" (\obj -> ((GHC.Base.pure PaymentPagesCheckoutSessionOptionalItem GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "adjustable_quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quantity"))

-- | Create a new 'PaymentPagesCheckoutSessionOptionalItem' with all required fields.
mkPaymentPagesCheckoutSessionOptionalItem ::
  -- | 'paymentPagesCheckoutSessionOptionalItemPrice'
  Data.Text.Internal.Text ->
  -- | 'paymentPagesCheckoutSessionOptionalItemQuantity'
  GHC.Types.Int ->
  PaymentPagesCheckoutSessionOptionalItem
mkPaymentPagesCheckoutSessionOptionalItem paymentPagesCheckoutSessionOptionalItemPrice paymentPagesCheckoutSessionOptionalItemQuantity =
  PaymentPagesCheckoutSessionOptionalItem
    { paymentPagesCheckoutSessionOptionalItemAdjustableQuantity = GHC.Maybe.Nothing,
      paymentPagesCheckoutSessionOptionalItemPrice = paymentPagesCheckoutSessionOptionalItemPrice,
      paymentPagesCheckoutSessionOptionalItemQuantity = paymentPagesCheckoutSessionOptionalItemQuantity
    }

-- | Defines the object schema located at @components.schemas.payment_pages_checkout_session_optional_item.properties.adjustable_quantity.anyOf@ in the specification.
data PaymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullable = PaymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullable
  { -- | enabled: Set to true if the quantity can be adjusted to any non-negative integer.
    paymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullableEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | maximum: The maximum quantity of this item the customer can purchase. By default this value is 99. You can specify a value up to 999999.
    paymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullableMaximum :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | minimum: The minimum quantity of this item the customer must purchase, if they choose to purchase it. Because this item is optional, the customer will always be able to remove it from their order, even if the \`minimum\` configured here is greater than 0. By default this value is 0.
    paymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullableMinimum :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (paymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullableEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maximum" Data.Aeson.Types.ToJSON..=)) (paymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullableMaximum obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("minimum" Data.Aeson.Types.ToJSON..=)) (paymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullableMinimum obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (paymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullableEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maximum" Data.Aeson.Types.ToJSON..=)) (paymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullableMaximum obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("minimum" Data.Aeson.Types.ToJSON..=)) (paymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullableMinimum obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullable" (\obj -> ((GHC.Base.pure PaymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "maximum")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "minimum"))

-- | Create a new 'PaymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullable' with all required fields.
mkPaymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullable :: PaymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullable
mkPaymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullable =
  PaymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullable
    { paymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullableEnabled = GHC.Maybe.Nothing,
      paymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullableMaximum = GHC.Maybe.Nothing,
      paymentPagesCheckoutSessionOptionalItemAdjustableQuantity'NonNullableMinimum = GHC.Maybe.Nothing
    }
