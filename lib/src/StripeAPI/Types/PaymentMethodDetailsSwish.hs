{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentMethodDetailsSwish
module StripeAPI.Types.PaymentMethodDetailsSwish where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_method_details_swish@ in the specification.
data PaymentMethodDetailsSwish = PaymentMethodDetailsSwish
  { -- | fingerprint: Uniquely identifies the payer\'s Swish account. You can use this attribute to check whether two Swish transactions were paid for by the same payer
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsSwishFingerprint :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | payment_reference: Payer bank reference number for the payment
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsSwishPaymentReference :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | verified_phone_last4: The last four digits of the Swish account phone number
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsSwishVerifiedPhoneLast4 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsSwish where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSwishFingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_reference" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSwishPaymentReference obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_phone_last4" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSwishVerifiedPhoneLast4 obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSwishFingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_reference" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSwishPaymentReference obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_phone_last4" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSwishVerifiedPhoneLast4 obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsSwish where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsSwish" (\obj -> ((GHC.Base.pure PaymentMethodDetailsSwish GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fingerprint")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_reference")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_phone_last4"))

-- | Create a new 'PaymentMethodDetailsSwish' with all required fields.
mkPaymentMethodDetailsSwish :: PaymentMethodDetailsSwish
mkPaymentMethodDetailsSwish =
  PaymentMethodDetailsSwish
    { paymentMethodDetailsSwishFingerprint = GHC.Maybe.Nothing,
      paymentMethodDetailsSwishPaymentReference = GHC.Maybe.Nothing,
      paymentMethodDetailsSwishVerifiedPhoneLast4 = GHC.Maybe.Nothing
    }
