{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema Billing_CreditGrant
module StripeAPI.Types.Billing_CreditGrant where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.BillingCreditGrantsResourceAmount
import {-# SOURCE #-} StripeAPI.Types.BillingCreditGrantsResourceApplicabilityConfig
import {-# SOURCE #-} StripeAPI.Types.Customer
import {-# SOURCE #-} StripeAPI.Types.DeletedCustomer
import {-# SOURCE #-} StripeAPI.Types.TestHelpers_TestClock
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.billing.credit_grant@ in the specification.
--
-- A credit grant is an API resource that documents the allocation of some billing credits to a customer.
--
-- Related guide: [Billing credits](https:\/\/docs.stripe.com\/billing\/subscriptions\/usage-based\/billing-credits)
data Billing'creditGrant = Billing'creditGrant
  { -- | amount:
    billing'creditGrantAmount :: BillingCreditGrantsResourceAmount,
    -- | applicability_config:
    billing'creditGrantApplicabilityConfig :: BillingCreditGrantsResourceApplicabilityConfig,
    -- | category: The category of this credit grant. This is for tracking purposes and isn\'t displayed to the customer.
    billing'creditGrantCategory :: Billing'creditGrantCategory',
    -- | created: Time at which the object was created. Measured in seconds since the Unix epoch.
    billing'creditGrantCreated :: GHC.Types.Int,
    -- | customer: ID of the customer receiving the billing credits.
    billing'creditGrantCustomer :: Billing'creditGrantCustomer'Variants,
    -- | effective_at: The time when the billing credits become effective-when they\'re eligible for use.
    billing'creditGrantEffectiveAt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | expires_at: The time when the billing credits expire. If not present, the billing credits don\'t expire.
    billing'creditGrantExpiresAt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | id: Unique identifier for the object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    billing'creditGrantId :: Data.Text.Internal.Text,
    -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
    billing'creditGrantLivemode :: GHC.Types.Bool,
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    billing'creditGrantMetadata :: Data.Aeson.Types.Internal.Object,
    -- | name: A descriptive name shown in dashboard.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    billing'creditGrantName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | priority: The priority for applying this credit grant. The highest priority is 0 and the lowest is 100.
    billing'creditGrantPriority :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | test_clock: ID of the test clock this credit grant belongs to.
    billing'creditGrantTestClock :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Billing'creditGrantTestClock'NonNullableVariants)),
    -- | updated: Time at which the object was last updated. Measured in seconds since the Unix epoch.
    billing'creditGrantUpdated :: GHC.Types.Int,
    -- | voided_at: The time when this credit grant was voided. If not present, the credit grant hasn\'t been voided.
    billing'creditGrantVoidedAt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditGrant where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= billing'creditGrantAmount obj] : ["applicability_config" Data.Aeson.Types.ToJSON..= billing'creditGrantApplicabilityConfig obj] : ["category" Data.Aeson.Types.ToJSON..= billing'creditGrantCategory obj] : ["created" Data.Aeson.Types.ToJSON..= billing'creditGrantCreated obj] : ["customer" Data.Aeson.Types.ToJSON..= billing'creditGrantCustomer obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("effective_at" Data.Aeson.Types.ToJSON..=)) (billing'creditGrantEffectiveAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_at" Data.Aeson.Types.ToJSON..=)) (billing'creditGrantExpiresAt obj) : ["id" Data.Aeson.Types.ToJSON..= billing'creditGrantId obj] : ["livemode" Data.Aeson.Types.ToJSON..= billing'creditGrantLivemode obj] : ["metadata" Data.Aeson.Types.ToJSON..= billing'creditGrantMetadata obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (billing'creditGrantName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("priority" Data.Aeson.Types.ToJSON..=)) (billing'creditGrantPriority obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("test_clock" Data.Aeson.Types.ToJSON..=)) (billing'creditGrantTestClock obj) : ["updated" Data.Aeson.Types.ToJSON..= billing'creditGrantUpdated obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("voided_at" Data.Aeson.Types.ToJSON..=)) (billing'creditGrantVoidedAt obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "billing.credit_grant"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= billing'creditGrantAmount obj] : ["applicability_config" Data.Aeson.Types.ToJSON..= billing'creditGrantApplicabilityConfig obj] : ["category" Data.Aeson.Types.ToJSON..= billing'creditGrantCategory obj] : ["created" Data.Aeson.Types.ToJSON..= billing'creditGrantCreated obj] : ["customer" Data.Aeson.Types.ToJSON..= billing'creditGrantCustomer obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("effective_at" Data.Aeson.Types.ToJSON..=)) (billing'creditGrantEffectiveAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_at" Data.Aeson.Types.ToJSON..=)) (billing'creditGrantExpiresAt obj) : ["id" Data.Aeson.Types.ToJSON..= billing'creditGrantId obj] : ["livemode" Data.Aeson.Types.ToJSON..= billing'creditGrantLivemode obj] : ["metadata" Data.Aeson.Types.ToJSON..= billing'creditGrantMetadata obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (billing'creditGrantName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("priority" Data.Aeson.Types.ToJSON..=)) (billing'creditGrantPriority obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("test_clock" Data.Aeson.Types.ToJSON..=)) (billing'creditGrantTestClock obj) : ["updated" Data.Aeson.Types.ToJSON..= billing'creditGrantUpdated obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("voided_at" Data.Aeson.Types.ToJSON..=)) (billing'creditGrantVoidedAt obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "billing.credit_grant"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditGrant where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Billing'creditGrant" (\obj -> ((((((((((((((GHC.Base.pure Billing'creditGrant GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "applicability_config")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "category")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "effective_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expires_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "priority")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "test_clock")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "updated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "voided_at"))

-- | Create a new 'Billing'creditGrant' with all required fields.
mkBilling'creditGrant ::
  -- | 'billing'creditGrantAmount'
  BillingCreditGrantsResourceAmount ->
  -- | 'billing'creditGrantApplicabilityConfig'
  BillingCreditGrantsResourceApplicabilityConfig ->
  -- | 'billing'creditGrantCategory'
  Billing'creditGrantCategory' ->
  -- | 'billing'creditGrantCreated'
  GHC.Types.Int ->
  -- | 'billing'creditGrantCustomer'
  Billing'creditGrantCustomer'Variants ->
  -- | 'billing'creditGrantId'
  Data.Text.Internal.Text ->
  -- | 'billing'creditGrantLivemode'
  GHC.Types.Bool ->
  -- | 'billing'creditGrantMetadata'
  Data.Aeson.Types.Internal.Object ->
  -- | 'billing'creditGrantUpdated'
  GHC.Types.Int ->
  Billing'creditGrant
mkBilling'creditGrant billing'creditGrantAmount billing'creditGrantApplicabilityConfig billing'creditGrantCategory billing'creditGrantCreated billing'creditGrantCustomer billing'creditGrantId billing'creditGrantLivemode billing'creditGrantMetadata billing'creditGrantUpdated =
  Billing'creditGrant
    { billing'creditGrantAmount = billing'creditGrantAmount,
      billing'creditGrantApplicabilityConfig = billing'creditGrantApplicabilityConfig,
      billing'creditGrantCategory = billing'creditGrantCategory,
      billing'creditGrantCreated = billing'creditGrantCreated,
      billing'creditGrantCustomer = billing'creditGrantCustomer,
      billing'creditGrantEffectiveAt = GHC.Maybe.Nothing,
      billing'creditGrantExpiresAt = GHC.Maybe.Nothing,
      billing'creditGrantId = billing'creditGrantId,
      billing'creditGrantLivemode = billing'creditGrantLivemode,
      billing'creditGrantMetadata = billing'creditGrantMetadata,
      billing'creditGrantName = GHC.Maybe.Nothing,
      billing'creditGrantPriority = GHC.Maybe.Nothing,
      billing'creditGrantTestClock = GHC.Maybe.Nothing,
      billing'creditGrantUpdated = billing'creditGrantUpdated,
      billing'creditGrantVoidedAt = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.billing.credit_grant.properties.category@ in the specification.
--
-- The category of this credit grant. This is for tracking purposes and isn\'t displayed to the customer.
data Billing'creditGrantCategory'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Billing'creditGrantCategory'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Billing'creditGrantCategory'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"paid"@
    Billing'creditGrantCategory'EnumPaid
  | -- | Represents the JSON value @"promotional"@
    Billing'creditGrantCategory'EnumPromotional
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditGrantCategory' where
  toJSON (Billing'creditGrantCategory'Other val) = val
  toJSON (Billing'creditGrantCategory'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Billing'creditGrantCategory'EnumPaid) = "paid"
  toJSON (Billing'creditGrantCategory'EnumPromotional) = "promotional"

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditGrantCategory' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "paid" -> Billing'creditGrantCategory'EnumPaid
          | val GHC.Classes.== "promotional" -> Billing'creditGrantCategory'EnumPromotional
          | GHC.Base.otherwise -> Billing'creditGrantCategory'Other val
      )

-- | Defines the oneOf schema located at @components.schemas.billing.credit_grant.properties.customer.anyOf@ in the specification.
--
-- ID of the customer receiving the billing credits.
data Billing'creditGrantCustomer'Variants
  = Billing'creditGrantCustomer'Text Data.Text.Internal.Text
  | Billing'creditGrantCustomer'Customer Customer
  | Billing'creditGrantCustomer'DeletedCustomer DeletedCustomer
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditGrantCustomer'Variants where
  toJSON (Billing'creditGrantCustomer'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Billing'creditGrantCustomer'Customer a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Billing'creditGrantCustomer'DeletedCustomer a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditGrantCustomer'Variants where
  parseJSON val = case (Billing'creditGrantCustomer'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Billing'creditGrantCustomer'Customer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Billing'creditGrantCustomer'DeletedCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @components.schemas.billing.credit_grant.properties.test_clock.anyOf@ in the specification.
--
-- ID of the test clock this credit grant belongs to.
data Billing'creditGrantTestClock'NonNullableVariants
  = Billing'creditGrantTestClock'NonNullableText Data.Text.Internal.Text
  | Billing'creditGrantTestClock'NonNullableTestHelpers'testClock TestHelpers'testClock
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditGrantTestClock'NonNullableVariants where
  toJSON (Billing'creditGrantTestClock'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Billing'creditGrantTestClock'NonNullableTestHelpers'testClock a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditGrantTestClock'NonNullableVariants where
  parseJSON val = case (Billing'creditGrantTestClock'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Billing'creditGrantTestClock'NonNullableTestHelpers'testClock Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
