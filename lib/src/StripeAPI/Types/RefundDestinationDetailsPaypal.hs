{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema RefundDestinationDetailsPaypal
module StripeAPI.Types.RefundDestinationDetailsPaypal where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.refund_destination_details_paypal@ in the specification.
data RefundDestinationDetailsPaypal = RefundDestinationDetailsPaypal
  { -- | network_decline_code: For refunds declined by the network, a decline code provided by the network which indicates the reason the refund failed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    refundDestinationDetailsPaypalNetworkDeclineCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON RefundDestinationDetailsPaypal where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network_decline_code" Data.Aeson.Types.ToJSON..=)) (refundDestinationDetailsPaypalNetworkDeclineCode obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network_decline_code" Data.Aeson.Types.ToJSON..=)) (refundDestinationDetailsPaypalNetworkDeclineCode obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON RefundDestinationDetailsPaypal where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "RefundDestinationDetailsPaypal" (\obj -> GHC.Base.pure RefundDestinationDetailsPaypal GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "network_decline_code"))

-- | Create a new 'RefundDestinationDetailsPaypal' with all required fields.
mkRefundDestinationDetailsPaypal :: RefundDestinationDetailsPaypal
mkRefundDestinationDetailsPaypal = RefundDestinationDetailsPaypal {refundDestinationDetailsPaypalNetworkDeclineCode = GHC.Maybe.Nothing}
