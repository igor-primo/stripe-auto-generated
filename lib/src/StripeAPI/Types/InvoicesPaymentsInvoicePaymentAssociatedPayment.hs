{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema InvoicesPaymentsInvoicePaymentAssociatedPayment
module StripeAPI.Types.InvoicesPaymentsInvoicePaymentAssociatedPayment where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Charge
import {-# SOURCE #-} StripeAPI.Types.PaymentIntent
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.invoices_payments_invoice_payment_associated_payment@ in the specification.
data InvoicesPaymentsInvoicePaymentAssociatedPayment = InvoicesPaymentsInvoicePaymentAssociatedPayment
  { -- | charge: ID of the successful charge for this payment when \`type\` is \`charge\`.Note: charge is only surfaced if the charge object is not associated with a payment intent. If the charge object does have a payment intent, the Invoice Payment surfaces the payment intent instead.
    invoicesPaymentsInvoicePaymentAssociatedPaymentCharge :: (GHC.Maybe.Maybe InvoicesPaymentsInvoicePaymentAssociatedPaymentCharge'Variants),
    -- | payment_intent: ID of the PaymentIntent associated with this payment when \`type\` is \`payment_intent\`. Note: This property is only populated for invoices finalized on or after March 15th, 2019.
    invoicesPaymentsInvoicePaymentAssociatedPaymentPaymentIntent :: (GHC.Maybe.Maybe InvoicesPaymentsInvoicePaymentAssociatedPaymentPaymentIntent'Variants),
    -- | type: Type of payment object associated with this invoice payment.
    invoicesPaymentsInvoicePaymentAssociatedPaymentType :: InvoicesPaymentsInvoicePaymentAssociatedPaymentType'
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON InvoicesPaymentsInvoicePaymentAssociatedPayment where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("charge" Data.Aeson.Types.ToJSON..=)) (invoicesPaymentsInvoicePaymentAssociatedPaymentCharge obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_intent" Data.Aeson.Types.ToJSON..=)) (invoicesPaymentsInvoicePaymentAssociatedPaymentPaymentIntent obj) : ["type" Data.Aeson.Types.ToJSON..= invoicesPaymentsInvoicePaymentAssociatedPaymentType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("charge" Data.Aeson.Types.ToJSON..=)) (invoicesPaymentsInvoicePaymentAssociatedPaymentCharge obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_intent" Data.Aeson.Types.ToJSON..=)) (invoicesPaymentsInvoicePaymentAssociatedPaymentPaymentIntent obj) : ["type" Data.Aeson.Types.ToJSON..= invoicesPaymentsInvoicePaymentAssociatedPaymentType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON InvoicesPaymentsInvoicePaymentAssociatedPayment where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoicesPaymentsInvoicePaymentAssociatedPayment" (\obj -> ((GHC.Base.pure InvoicesPaymentsInvoicePaymentAssociatedPayment GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "charge")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_intent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))

-- | Create a new 'InvoicesPaymentsInvoicePaymentAssociatedPayment' with all required fields.
mkInvoicesPaymentsInvoicePaymentAssociatedPayment ::
  -- | 'invoicesPaymentsInvoicePaymentAssociatedPaymentType'
  InvoicesPaymentsInvoicePaymentAssociatedPaymentType' ->
  InvoicesPaymentsInvoicePaymentAssociatedPayment
mkInvoicesPaymentsInvoicePaymentAssociatedPayment invoicesPaymentsInvoicePaymentAssociatedPaymentType =
  InvoicesPaymentsInvoicePaymentAssociatedPayment
    { invoicesPaymentsInvoicePaymentAssociatedPaymentCharge = GHC.Maybe.Nothing,
      invoicesPaymentsInvoicePaymentAssociatedPaymentPaymentIntent = GHC.Maybe.Nothing,
      invoicesPaymentsInvoicePaymentAssociatedPaymentType = invoicesPaymentsInvoicePaymentAssociatedPaymentType
    }

-- | Defines the oneOf schema located at @components.schemas.invoices_payments_invoice_payment_associated_payment.properties.charge.anyOf@ in the specification.
--
-- ID of the successful charge for this payment when \`type\` is \`charge\`.Note: charge is only surfaced if the charge object is not associated with a payment intent. If the charge object does have a payment intent, the Invoice Payment surfaces the payment intent instead.
data InvoicesPaymentsInvoicePaymentAssociatedPaymentCharge'Variants
  = InvoicesPaymentsInvoicePaymentAssociatedPaymentCharge'Text Data.Text.Internal.Text
  | InvoicesPaymentsInvoicePaymentAssociatedPaymentCharge'Charge Charge
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON InvoicesPaymentsInvoicePaymentAssociatedPaymentCharge'Variants where
  toJSON (InvoicesPaymentsInvoicePaymentAssociatedPaymentCharge'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (InvoicesPaymentsInvoicePaymentAssociatedPaymentCharge'Charge a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON InvoicesPaymentsInvoicePaymentAssociatedPaymentCharge'Variants where
  parseJSON val = case (InvoicesPaymentsInvoicePaymentAssociatedPaymentCharge'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoicesPaymentsInvoicePaymentAssociatedPaymentCharge'Charge Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @components.schemas.invoices_payments_invoice_payment_associated_payment.properties.payment_intent.anyOf@ in the specification.
--
-- ID of the PaymentIntent associated with this payment when \`type\` is \`payment_intent\`. Note: This property is only populated for invoices finalized on or after March 15th, 2019.
data InvoicesPaymentsInvoicePaymentAssociatedPaymentPaymentIntent'Variants
  = InvoicesPaymentsInvoicePaymentAssociatedPaymentPaymentIntent'Text Data.Text.Internal.Text
  | InvoicesPaymentsInvoicePaymentAssociatedPaymentPaymentIntent'PaymentIntent PaymentIntent
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON InvoicesPaymentsInvoicePaymentAssociatedPaymentPaymentIntent'Variants where
  toJSON (InvoicesPaymentsInvoicePaymentAssociatedPaymentPaymentIntent'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (InvoicesPaymentsInvoicePaymentAssociatedPaymentPaymentIntent'PaymentIntent a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON InvoicesPaymentsInvoicePaymentAssociatedPaymentPaymentIntent'Variants where
  parseJSON val = case (InvoicesPaymentsInvoicePaymentAssociatedPaymentPaymentIntent'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoicesPaymentsInvoicePaymentAssociatedPaymentPaymentIntent'PaymentIntent Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @components.schemas.invoices_payments_invoice_payment_associated_payment.properties.type@ in the specification.
--
-- Type of payment object associated with this invoice payment.
data InvoicesPaymentsInvoicePaymentAssociatedPaymentType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    InvoicesPaymentsInvoicePaymentAssociatedPaymentType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    InvoicesPaymentsInvoicePaymentAssociatedPaymentType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"charge"@
    InvoicesPaymentsInvoicePaymentAssociatedPaymentType'EnumCharge
  | -- | Represents the JSON value @"payment_intent"@
    InvoicesPaymentsInvoicePaymentAssociatedPaymentType'EnumPaymentIntent
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON InvoicesPaymentsInvoicePaymentAssociatedPaymentType' where
  toJSON (InvoicesPaymentsInvoicePaymentAssociatedPaymentType'Other val) = val
  toJSON (InvoicesPaymentsInvoicePaymentAssociatedPaymentType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (InvoicesPaymentsInvoicePaymentAssociatedPaymentType'EnumCharge) = "charge"
  toJSON (InvoicesPaymentsInvoicePaymentAssociatedPaymentType'EnumPaymentIntent) = "payment_intent"

instance Data.Aeson.Types.FromJSON.FromJSON InvoicesPaymentsInvoicePaymentAssociatedPaymentType' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "charge" -> InvoicesPaymentsInvoicePaymentAssociatedPaymentType'EnumCharge
          | val GHC.Classes.== "payment_intent" -> InvoicesPaymentsInvoicePaymentAssociatedPaymentType'EnumPaymentIntent
          | GHC.Base.otherwise -> InvoicesPaymentsInvoicePaymentAssociatedPaymentType'Other val
      )
