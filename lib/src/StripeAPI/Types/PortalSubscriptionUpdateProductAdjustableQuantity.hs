{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PortalSubscriptionUpdateProductAdjustableQuantity
module StripeAPI.Types.PortalSubscriptionUpdateProductAdjustableQuantity where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.portal_subscription_update_product_adjustable_quantity@ in the specification.
data PortalSubscriptionUpdateProductAdjustableQuantity = PortalSubscriptionUpdateProductAdjustableQuantity
  { -- | enabled: If true, the quantity can be adjusted to any non-negative integer.
    portalSubscriptionUpdateProductAdjustableQuantityEnabled :: GHC.Types.Bool,
    -- | maximum: The maximum quantity that can be set for the product.
    portalSubscriptionUpdateProductAdjustableQuantityMaximum :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | minimum: The minimum quantity that can be set for the product.
    portalSubscriptionUpdateProductAdjustableQuantityMinimum :: GHC.Types.Int
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PortalSubscriptionUpdateProductAdjustableQuantity where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= portalSubscriptionUpdateProductAdjustableQuantityEnabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maximum" Data.Aeson.Types.ToJSON..=)) (portalSubscriptionUpdateProductAdjustableQuantityMaximum obj) : ["minimum" Data.Aeson.Types.ToJSON..= portalSubscriptionUpdateProductAdjustableQuantityMinimum obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= portalSubscriptionUpdateProductAdjustableQuantityEnabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maximum" Data.Aeson.Types.ToJSON..=)) (portalSubscriptionUpdateProductAdjustableQuantityMaximum obj) : ["minimum" Data.Aeson.Types.ToJSON..= portalSubscriptionUpdateProductAdjustableQuantityMinimum obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PortalSubscriptionUpdateProductAdjustableQuantity where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PortalSubscriptionUpdateProductAdjustableQuantity" (\obj -> ((GHC.Base.pure PortalSubscriptionUpdateProductAdjustableQuantity GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "maximum")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "minimum"))

-- | Create a new 'PortalSubscriptionUpdateProductAdjustableQuantity' with all required fields.
mkPortalSubscriptionUpdateProductAdjustableQuantity ::
  -- | 'portalSubscriptionUpdateProductAdjustableQuantityEnabled'
  GHC.Types.Bool ->
  -- | 'portalSubscriptionUpdateProductAdjustableQuantityMinimum'
  GHC.Types.Int ->
  PortalSubscriptionUpdateProductAdjustableQuantity
mkPortalSubscriptionUpdateProductAdjustableQuantity portalSubscriptionUpdateProductAdjustableQuantityEnabled portalSubscriptionUpdateProductAdjustableQuantityMinimum =
  PortalSubscriptionUpdateProductAdjustableQuantity
    { portalSubscriptionUpdateProductAdjustableQuantityEnabled = portalSubscriptionUpdateProductAdjustableQuantityEnabled,
      portalSubscriptionUpdateProductAdjustableQuantityMaximum = GHC.Maybe.Nothing,
      portalSubscriptionUpdateProductAdjustableQuantityMinimum = portalSubscriptionUpdateProductAdjustableQuantityMinimum
    }
