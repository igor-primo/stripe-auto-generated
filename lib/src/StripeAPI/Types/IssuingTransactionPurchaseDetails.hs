{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema IssuingTransactionPurchaseDetails
module StripeAPI.Types.IssuingTransactionPurchaseDetails where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFleetCardholderPromptData
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFleetData
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFleetFuelPriceData
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFleetNonFuelPriceData
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFleetReportedBreakdown
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFleetTaxData
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFlightData
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFlightDataLeg
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFuelData
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionLodgingData
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionReceiptData
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.issuing_transaction_purchase_details@ in the specification.
data IssuingTransactionPurchaseDetails = IssuingTransactionPurchaseDetails
  { -- | fleet: Fleet-specific information for transactions using Fleet cards.
    issuingTransactionPurchaseDetailsFleet :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionPurchaseDetailsFleet'NonNullable)),
    -- | flight: Information about the flight that was purchased with this transaction.
    issuingTransactionPurchaseDetailsFlight :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionPurchaseDetailsFlight'NonNullable)),
    -- | fuel: Information about fuel that was purchased with this transaction.
    issuingTransactionPurchaseDetailsFuel :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionPurchaseDetailsFuel'NonNullable)),
    -- | lodging: Information about lodging that was purchased with this transaction.
    issuingTransactionPurchaseDetailsLodging :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionPurchaseDetailsLodging'NonNullable)),
    -- | receipt: The line items in the purchase.
    issuingTransactionPurchaseDetailsReceipt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable [IssuingTransactionReceiptData])),
    -- | reference: A merchant-specific order number.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionPurchaseDetailsReference :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionPurchaseDetails where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fleet" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flight" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fuel" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lodging" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsLodging obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receipt" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsReceipt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsReference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fleet" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flight" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fuel" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lodging" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsLodging obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receipt" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsReceipt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsReference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionPurchaseDetails where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionPurchaseDetails" (\obj -> (((((GHC.Base.pure IssuingTransactionPurchaseDetails GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fleet")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flight")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fuel")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lodging")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "receipt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reference"))

-- | Create a new 'IssuingTransactionPurchaseDetails' with all required fields.
mkIssuingTransactionPurchaseDetails :: IssuingTransactionPurchaseDetails
mkIssuingTransactionPurchaseDetails =
  IssuingTransactionPurchaseDetails
    { issuingTransactionPurchaseDetailsFleet = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFlight = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFuel = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsLodging = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsReceipt = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsReference = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.issuing_transaction_purchase_details.properties.fleet.anyOf@ in the specification.
--
-- Fleet-specific information for transactions using Fleet cards.
data IssuingTransactionPurchaseDetailsFleet'NonNullable = IssuingTransactionPurchaseDetailsFleet'NonNullable
  { -- | cardholder_prompt_data: Answers to prompts presented to cardholder at point of sale.
    issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullable)),
    -- | purchase_type: The type of purchase. One of \`fuel_purchase\`, \`non_fuel_purchase\`, or \`fuel_and_non_fuel_purchase\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionPurchaseDetailsFleet'NonNullablePurchaseType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | reported_breakdown: More information about the total amount. This information is not guaranteed to be accurate as some merchants may provide unreliable data.
    issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullable)),
    -- | service_type: The type of fuel service. One of \`non_fuel_transaction\`, \`full_service\`, or \`self_service\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionPurchaseDetailsFleet'NonNullableServiceType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionPurchaseDetailsFleet'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cardholder_prompt_data" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("purchase_type" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullablePurchaseType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reported_breakdown" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_type" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableServiceType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cardholder_prompt_data" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("purchase_type" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullablePurchaseType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reported_breakdown" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_type" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableServiceType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionPurchaseDetailsFleet'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionPurchaseDetailsFleet'NonNullable" (\obj -> (((GHC.Base.pure IssuingTransactionPurchaseDetailsFleet'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cardholder_prompt_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "purchase_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reported_breakdown")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "service_type"))

-- | Create a new 'IssuingTransactionPurchaseDetailsFleet'NonNullable' with all required fields.
mkIssuingTransactionPurchaseDetailsFleet'NonNullable :: IssuingTransactionPurchaseDetailsFleet'NonNullable
mkIssuingTransactionPurchaseDetailsFleet'NonNullable =
  IssuingTransactionPurchaseDetailsFleet'NonNullable
    { issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFleet'NonNullablePurchaseType = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFleet'NonNullableServiceType = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.issuing_transaction_purchase_details.properties.fleet.anyOf.properties.cardholder_prompt_data.anyOf@ in the specification.
--
-- Answers to prompts presented to cardholder at point of sale.
data IssuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullable = IssuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullable
  { -- | driver_id: Driver ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableDriverId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | odometer: Odometer reading.
    issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableOdometer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | unspecified_id: An alphanumeric ID. This field is used when a vehicle ID, driver ID, or generic ID is entered by the cardholder, but the merchant or card network did not specify the prompt type.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableUnspecifiedId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | user_id: User ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableUserId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | vehicle_number: Vehicle number.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableVehicleNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("driver_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableDriverId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("odometer" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableOdometer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unspecified_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableUnspecifiedId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableUserId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vehicle_number" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableVehicleNumber obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("driver_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableDriverId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("odometer" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableOdometer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unspecified_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableUnspecifiedId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableUserId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vehicle_number" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableVehicleNumber obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullable" (\obj -> ((((GHC.Base.pure IssuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "driver_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "odometer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unspecified_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "vehicle_number"))

-- | Create a new 'IssuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullable' with all required fields.
mkIssuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullable :: IssuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullable
mkIssuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullable =
  IssuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullable
    { issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableDriverId = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableOdometer = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableUnspecifiedId = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableUserId = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFleet'NonNullableCardholderPromptData'NonNullableVehicleNumber = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.issuing_transaction_purchase_details.properties.fleet.anyOf.properties.reported_breakdown.anyOf@ in the specification.
--
-- More information about the total amount. This information is not guaranteed to be accurate as some merchants may provide unreliable data.
data IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullable = IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullable
  { -- | fuel: Breakdown of fuel portion of the purchase.
    issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullable)),
    -- | non_fuel: Breakdown of non-fuel portion of the purchase.
    issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullable)),
    -- | tax: Information about tax included in this transaction.
    issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fuel" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("non_fuel" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fuel" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("non_fuel" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullable" (\obj -> ((GHC.Base.pure IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fuel")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "non_fuel")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax"))

-- | Create a new 'IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullable' with all required fields.
mkIssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullable :: IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullable
mkIssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullable =
  IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullable
    { issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.issuing_transaction_purchase_details.properties.fleet.anyOf.properties.reported_breakdown.anyOf.properties.fuel.anyOf@ in the specification.
--
-- Breakdown of fuel portion of the purchase.
data IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullable = IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullable
  { -- | gross_amount_decimal: Gross fuel amount that should equal Fuel Volume multipled by Fuel Unit Cost, inclusive of taxes.
    issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullableGrossAmountDecimal :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gross_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullableGrossAmountDecimal obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gross_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullableGrossAmountDecimal obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullable" (\obj -> GHC.Base.pure IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gross_amount_decimal"))

-- | Create a new 'IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullable' with all required fields.
mkIssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullable :: IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullable
mkIssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullable = IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullable {issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableFuel'NonNullableGrossAmountDecimal = GHC.Maybe.Nothing}

-- | Defines the object schema located at @components.schemas.issuing_transaction_purchase_details.properties.fleet.anyOf.properties.reported_breakdown.anyOf.properties.non_fuel.anyOf@ in the specification.
--
-- Breakdown of non-fuel portion of the purchase.
data IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullable = IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullable
  { -- | gross_amount_decimal: Gross non-fuel amount that should equal the sum of the line items, inclusive of taxes.
    issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullableGrossAmountDecimal :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gross_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullableGrossAmountDecimal obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gross_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullableGrossAmountDecimal obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullable" (\obj -> GHC.Base.pure IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gross_amount_decimal"))

-- | Create a new 'IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullable' with all required fields.
mkIssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullable :: IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullable
mkIssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullable = IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullable {issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableNonFuel'NonNullableGrossAmountDecimal = GHC.Maybe.Nothing}

-- | Defines the object schema located at @components.schemas.issuing_transaction_purchase_details.properties.fleet.anyOf.properties.reported_breakdown.anyOf.properties.tax.anyOf@ in the specification.
--
-- Information about tax included in this transaction.
data IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullable = IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullable
  { -- | local_amount_decimal: Amount of state or provincial Sales Tax included in the transaction amount. Null if not reported by merchant or not subject to tax.
    issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullableLocalAmountDecimal :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | national_amount_decimal: Amount of national Sales Tax or VAT included in the transaction amount. Null if not reported by merchant or not subject to tax.
    issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullableNationalAmountDecimal :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("local_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullableLocalAmountDecimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("national_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullableNationalAmountDecimal obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("local_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullableLocalAmountDecimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("national_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullableNationalAmountDecimal obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullable" (\obj -> (GHC.Base.pure IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "local_amount_decimal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "national_amount_decimal"))

-- | Create a new 'IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullable' with all required fields.
mkIssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullable :: IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullable
mkIssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullable =
  IssuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullable
    { issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullableLocalAmountDecimal = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFleet'NonNullableReportedBreakdown'NonNullableTax'NonNullableNationalAmountDecimal = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.issuing_transaction_purchase_details.properties.flight.anyOf@ in the specification.
--
-- Information about the flight that was purchased with this transaction.
data IssuingTransactionPurchaseDetailsFlight'NonNullable = IssuingTransactionPurchaseDetailsFlight'NonNullable
  { -- | departure_at: The time that the flight departed.
    issuingTransactionPurchaseDetailsFlight'NonNullableDepartureAt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | passenger_name: The name of the passenger.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionPurchaseDetailsFlight'NonNullablePassengerName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | refundable: Whether the ticket is refundable.
    issuingTransactionPurchaseDetailsFlight'NonNullableRefundable :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Bool)),
    -- | segments: The legs of the trip.
    issuingTransactionPurchaseDetailsFlight'NonNullableSegments :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable [IssuingTransactionFlightDataLeg])),
    -- | travel_agency: The travel agency that issued the ticket.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionPurchaseDetailsFlight'NonNullableTravelAgency :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionPurchaseDetailsFlight'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("departure_at" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableDepartureAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("passenger_name" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullablePassengerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refundable" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableRefundable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("segments" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableSegments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("travel_agency" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableTravelAgency obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("departure_at" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableDepartureAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("passenger_name" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullablePassengerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refundable" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableRefundable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("segments" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableSegments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("travel_agency" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableTravelAgency obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionPurchaseDetailsFlight'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionPurchaseDetailsFlight'NonNullable" (\obj -> ((((GHC.Base.pure IssuingTransactionPurchaseDetailsFlight'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "departure_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "passenger_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refundable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "segments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "travel_agency"))

-- | Create a new 'IssuingTransactionPurchaseDetailsFlight'NonNullable' with all required fields.
mkIssuingTransactionPurchaseDetailsFlight'NonNullable :: IssuingTransactionPurchaseDetailsFlight'NonNullable
mkIssuingTransactionPurchaseDetailsFlight'NonNullable =
  IssuingTransactionPurchaseDetailsFlight'NonNullable
    { issuingTransactionPurchaseDetailsFlight'NonNullableDepartureAt = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFlight'NonNullablePassengerName = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFlight'NonNullableRefundable = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFlight'NonNullableSegments = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFlight'NonNullableTravelAgency = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.issuing_transaction_purchase_details.properties.fuel.anyOf@ in the specification.
--
-- Information about fuel that was purchased with this transaction.
data IssuingTransactionPurchaseDetailsFuel'NonNullable = IssuingTransactionPurchaseDetailsFuel'NonNullable
  { -- | industry_product_code: [Conexxus Payment System Product Code](https:\/\/www.conexxus.org\/conexxus-payment-system-product-codes) identifying the primary fuel product purchased.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionPurchaseDetailsFuel'NonNullableIndustryProductCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | quantity_decimal: The quantity of \`unit\`s of fuel that was dispensed, represented as a decimal string with at most 12 decimal places.
    issuingTransactionPurchaseDetailsFuel'NonNullableQuantityDecimal :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | type: The type of fuel that was purchased. One of \`diesel\`, \`unleaded_plus\`, \`unleaded_regular\`, \`unleaded_super\`, or \`other\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionPurchaseDetailsFuel'NonNullableType :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | unit: The units for \`quantity_decimal\`. One of \`charging_minute\`, \`imperial_gallon\`, \`kilogram\`, \`kilowatt_hour\`, \`liter\`, \`pound\`, \`us_gallon\`, or \`other\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionPurchaseDetailsFuel'NonNullableUnit :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | unit_cost_decimal: The cost in cents per each unit of fuel, represented as a decimal string with at most 12 decimal places.
    issuingTransactionPurchaseDetailsFuel'NonNullableUnitCostDecimal :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionPurchaseDetailsFuel'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("industry_product_code" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableIndustryProductCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableQuantityDecimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableUnit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_cost_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableUnitCostDecimal obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("industry_product_code" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableIndustryProductCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableQuantityDecimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableUnit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_cost_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableUnitCostDecimal obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionPurchaseDetailsFuel'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionPurchaseDetailsFuel'NonNullable" (\obj -> ((((GHC.Base.pure IssuingTransactionPurchaseDetailsFuel'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "industry_product_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "quantity_decimal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_cost_decimal"))

-- | Create a new 'IssuingTransactionPurchaseDetailsFuel'NonNullable' with all required fields.
mkIssuingTransactionPurchaseDetailsFuel'NonNullable :: IssuingTransactionPurchaseDetailsFuel'NonNullable
mkIssuingTransactionPurchaseDetailsFuel'NonNullable =
  IssuingTransactionPurchaseDetailsFuel'NonNullable
    { issuingTransactionPurchaseDetailsFuel'NonNullableIndustryProductCode = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFuel'NonNullableQuantityDecimal = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFuel'NonNullableType = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFuel'NonNullableUnit = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsFuel'NonNullableUnitCostDecimal = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.issuing_transaction_purchase_details.properties.lodging.anyOf@ in the specification.
--
-- Information about lodging that was purchased with this transaction.
data IssuingTransactionPurchaseDetailsLodging'NonNullable = IssuingTransactionPurchaseDetailsLodging'NonNullable
  { -- | check_in_at: The time of checking into the lodging.
    issuingTransactionPurchaseDetailsLodging'NonNullableCheckInAt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | nights: The number of nights stayed at the lodging.
    issuingTransactionPurchaseDetailsLodging'NonNullableNights :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionPurchaseDetailsLodging'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("check_in_at" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsLodging'NonNullableCheckInAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nights" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsLodging'NonNullableNights obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("check_in_at" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsLodging'NonNullableCheckInAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nights" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsLodging'NonNullableNights obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionPurchaseDetailsLodging'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionPurchaseDetailsLodging'NonNullable" (\obj -> (GHC.Base.pure IssuingTransactionPurchaseDetailsLodging'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "check_in_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "nights"))

-- | Create a new 'IssuingTransactionPurchaseDetailsLodging'NonNullable' with all required fields.
mkIssuingTransactionPurchaseDetailsLodging'NonNullable :: IssuingTransactionPurchaseDetailsLodging'NonNullable
mkIssuingTransactionPurchaseDetailsLodging'NonNullable =
  IssuingTransactionPurchaseDetailsLodging'NonNullable
    { issuingTransactionPurchaseDetailsLodging'NonNullableCheckInAt = GHC.Maybe.Nothing,
      issuingTransactionPurchaseDetailsLodging'NonNullableNights = GHC.Maybe.Nothing
    }
