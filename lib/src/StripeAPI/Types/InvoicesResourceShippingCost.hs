{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema InvoicesResourceShippingCost
module StripeAPI.Types.InvoicesResourceShippingCost where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.LineItemsTaxAmount
import {-# SOURCE #-} StripeAPI.Types.ShippingRate
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.invoices_resource_shipping_cost@ in the specification.
data InvoicesResourceShippingCost = InvoicesResourceShippingCost
  { -- | amount_subtotal: Total shipping cost before any taxes are applied.
    invoicesResourceShippingCostAmountSubtotal :: GHC.Types.Int,
    -- | amount_tax: Total tax amount applied due to shipping costs. If no tax was applied, defaults to 0.
    invoicesResourceShippingCostAmountTax :: GHC.Types.Int,
    -- | amount_total: Total shipping cost after taxes are applied.
    invoicesResourceShippingCostAmountTotal :: GHC.Types.Int,
    -- | shipping_rate: The ID of the ShippingRate for this invoice.
    invoicesResourceShippingCostShippingRate :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoicesResourceShippingCostShippingRate'NonNullableVariants)),
    -- | taxes: The taxes applied to the shipping rate.
    invoicesResourceShippingCostTaxes :: (GHC.Maybe.Maybe [LineItemsTaxAmount])
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON InvoicesResourceShippingCost where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount_subtotal" Data.Aeson.Types.ToJSON..= invoicesResourceShippingCostAmountSubtotal obj] : ["amount_tax" Data.Aeson.Types.ToJSON..= invoicesResourceShippingCostAmountTax obj] : ["amount_total" Data.Aeson.Types.ToJSON..= invoicesResourceShippingCostAmountTotal obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_rate" Data.Aeson.Types.ToJSON..=)) (invoicesResourceShippingCostShippingRate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("taxes" Data.Aeson.Types.ToJSON..=)) (invoicesResourceShippingCostTaxes obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount_subtotal" Data.Aeson.Types.ToJSON..= invoicesResourceShippingCostAmountSubtotal obj] : ["amount_tax" Data.Aeson.Types.ToJSON..= invoicesResourceShippingCostAmountTax obj] : ["amount_total" Data.Aeson.Types.ToJSON..= invoicesResourceShippingCostAmountTotal obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_rate" Data.Aeson.Types.ToJSON..=)) (invoicesResourceShippingCostShippingRate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("taxes" Data.Aeson.Types.ToJSON..=)) (invoicesResourceShippingCostTaxes obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON InvoicesResourceShippingCost where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoicesResourceShippingCost" (\obj -> ((((GHC.Base.pure InvoicesResourceShippingCost GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount_subtotal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount_total")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_rate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "taxes"))

-- | Create a new 'InvoicesResourceShippingCost' with all required fields.
mkInvoicesResourceShippingCost ::
  -- | 'invoicesResourceShippingCostAmountSubtotal'
  GHC.Types.Int ->
  -- | 'invoicesResourceShippingCostAmountTax'
  GHC.Types.Int ->
  -- | 'invoicesResourceShippingCostAmountTotal'
  GHC.Types.Int ->
  InvoicesResourceShippingCost
mkInvoicesResourceShippingCost invoicesResourceShippingCostAmountSubtotal invoicesResourceShippingCostAmountTax invoicesResourceShippingCostAmountTotal =
  InvoicesResourceShippingCost
    { invoicesResourceShippingCostAmountSubtotal = invoicesResourceShippingCostAmountSubtotal,
      invoicesResourceShippingCostAmountTax = invoicesResourceShippingCostAmountTax,
      invoicesResourceShippingCostAmountTotal = invoicesResourceShippingCostAmountTotal,
      invoicesResourceShippingCostShippingRate = GHC.Maybe.Nothing,
      invoicesResourceShippingCostTaxes = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @components.schemas.invoices_resource_shipping_cost.properties.shipping_rate.anyOf@ in the specification.
--
-- The ID of the ShippingRate for this invoice.
data InvoicesResourceShippingCostShippingRate'NonNullableVariants
  = InvoicesResourceShippingCostShippingRate'NonNullableText Data.Text.Internal.Text
  | InvoicesResourceShippingCostShippingRate'NonNullableShippingRate ShippingRate
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON InvoicesResourceShippingCostShippingRate'NonNullableVariants where
  toJSON (InvoicesResourceShippingCostShippingRate'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (InvoicesResourceShippingCostShippingRate'NonNullableShippingRate a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON InvoicesResourceShippingCostShippingRate'NonNullableVariants where
  parseJSON val = case (InvoicesResourceShippingCostShippingRate'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoicesResourceShippingCostShippingRate'NonNullableShippingRate Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
