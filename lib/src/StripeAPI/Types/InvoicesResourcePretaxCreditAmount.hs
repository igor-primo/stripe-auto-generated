{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema InvoicesResourcePretaxCreditAmount
module StripeAPI.Types.InvoicesResourcePretaxCreditAmount where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Billing_CreditBalanceTransaction
import {-# SOURCE #-} StripeAPI.Types.DeletedDiscount
import {-# SOURCE #-} StripeAPI.Types.Discount
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.invoices_resource_pretax_credit_amount@ in the specification.
data InvoicesResourcePretaxCreditAmount = InvoicesResourcePretaxCreditAmount
  { -- | amount: The amount, in cents (or local equivalent), of the pretax credit amount.
    invoicesResourcePretaxCreditAmountAmount :: GHC.Types.Int,
    -- | credit_balance_transaction: The credit balance transaction that was applied to get this pretax credit amount.
    invoicesResourcePretaxCreditAmountCreditBalanceTransaction :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoicesResourcePretaxCreditAmountCreditBalanceTransaction'NonNullableVariants)),
    -- | discount: The discount that was applied to get this pretax credit amount.
    invoicesResourcePretaxCreditAmountDiscount :: (GHC.Maybe.Maybe InvoicesResourcePretaxCreditAmountDiscount'Variants),
    -- | type: Type of the pretax credit amount referenced.
    invoicesResourcePretaxCreditAmountType :: InvoicesResourcePretaxCreditAmountType'
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON InvoicesResourcePretaxCreditAmount where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= invoicesResourcePretaxCreditAmountAmount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credit_balance_transaction" Data.Aeson.Types.ToJSON..=)) (invoicesResourcePretaxCreditAmountCreditBalanceTransaction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (invoicesResourcePretaxCreditAmountDiscount obj) : ["type" Data.Aeson.Types.ToJSON..= invoicesResourcePretaxCreditAmountType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= invoicesResourcePretaxCreditAmountAmount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credit_balance_transaction" Data.Aeson.Types.ToJSON..=)) (invoicesResourcePretaxCreditAmountCreditBalanceTransaction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (invoicesResourcePretaxCreditAmountDiscount obj) : ["type" Data.Aeson.Types.ToJSON..= invoicesResourcePretaxCreditAmountType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON InvoicesResourcePretaxCreditAmount where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoicesResourcePretaxCreditAmount" (\obj -> (((GHC.Base.pure InvoicesResourcePretaxCreditAmount GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "credit_balance_transaction")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "discount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))

-- | Create a new 'InvoicesResourcePretaxCreditAmount' with all required fields.
mkInvoicesResourcePretaxCreditAmount ::
  -- | 'invoicesResourcePretaxCreditAmountAmount'
  GHC.Types.Int ->
  -- | 'invoicesResourcePretaxCreditAmountType'
  InvoicesResourcePretaxCreditAmountType' ->
  InvoicesResourcePretaxCreditAmount
mkInvoicesResourcePretaxCreditAmount invoicesResourcePretaxCreditAmountAmount invoicesResourcePretaxCreditAmountType =
  InvoicesResourcePretaxCreditAmount
    { invoicesResourcePretaxCreditAmountAmount = invoicesResourcePretaxCreditAmountAmount,
      invoicesResourcePretaxCreditAmountCreditBalanceTransaction = GHC.Maybe.Nothing,
      invoicesResourcePretaxCreditAmountDiscount = GHC.Maybe.Nothing,
      invoicesResourcePretaxCreditAmountType = invoicesResourcePretaxCreditAmountType
    }

-- | Defines the oneOf schema located at @components.schemas.invoices_resource_pretax_credit_amount.properties.credit_balance_transaction.anyOf@ in the specification.
--
-- The credit balance transaction that was applied to get this pretax credit amount.
data InvoicesResourcePretaxCreditAmountCreditBalanceTransaction'NonNullableVariants
  = InvoicesResourcePretaxCreditAmountCreditBalanceTransaction'NonNullableText Data.Text.Internal.Text
  | InvoicesResourcePretaxCreditAmountCreditBalanceTransaction'NonNullableBilling'creditBalanceTransaction Billing'creditBalanceTransaction
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON InvoicesResourcePretaxCreditAmountCreditBalanceTransaction'NonNullableVariants where
  toJSON (InvoicesResourcePretaxCreditAmountCreditBalanceTransaction'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (InvoicesResourcePretaxCreditAmountCreditBalanceTransaction'NonNullableBilling'creditBalanceTransaction a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON InvoicesResourcePretaxCreditAmountCreditBalanceTransaction'NonNullableVariants where
  parseJSON val = case (InvoicesResourcePretaxCreditAmountCreditBalanceTransaction'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoicesResourcePretaxCreditAmountCreditBalanceTransaction'NonNullableBilling'creditBalanceTransaction Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @components.schemas.invoices_resource_pretax_credit_amount.properties.discount.anyOf@ in the specification.
--
-- The discount that was applied to get this pretax credit amount.
data InvoicesResourcePretaxCreditAmountDiscount'Variants
  = InvoicesResourcePretaxCreditAmountDiscount'Text Data.Text.Internal.Text
  | InvoicesResourcePretaxCreditAmountDiscount'Discount Discount
  | InvoicesResourcePretaxCreditAmountDiscount'DeletedDiscount DeletedDiscount
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON InvoicesResourcePretaxCreditAmountDiscount'Variants where
  toJSON (InvoicesResourcePretaxCreditAmountDiscount'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (InvoicesResourcePretaxCreditAmountDiscount'Discount a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (InvoicesResourcePretaxCreditAmountDiscount'DeletedDiscount a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON InvoicesResourcePretaxCreditAmountDiscount'Variants where
  parseJSON val = case (InvoicesResourcePretaxCreditAmountDiscount'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoicesResourcePretaxCreditAmountDiscount'Discount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoicesResourcePretaxCreditAmountDiscount'DeletedDiscount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @components.schemas.invoices_resource_pretax_credit_amount.properties.type@ in the specification.
--
-- Type of the pretax credit amount referenced.
data InvoicesResourcePretaxCreditAmountType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    InvoicesResourcePretaxCreditAmountType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    InvoicesResourcePretaxCreditAmountType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"credit_balance_transaction"@
    InvoicesResourcePretaxCreditAmountType'EnumCreditBalanceTransaction
  | -- | Represents the JSON value @"discount"@
    InvoicesResourcePretaxCreditAmountType'EnumDiscount
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON InvoicesResourcePretaxCreditAmountType' where
  toJSON (InvoicesResourcePretaxCreditAmountType'Other val) = val
  toJSON (InvoicesResourcePretaxCreditAmountType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (InvoicesResourcePretaxCreditAmountType'EnumCreditBalanceTransaction) = "credit_balance_transaction"
  toJSON (InvoicesResourcePretaxCreditAmountType'EnumDiscount) = "discount"

instance Data.Aeson.Types.FromJSON.FromJSON InvoicesResourcePretaxCreditAmountType' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "credit_balance_transaction" -> InvoicesResourcePretaxCreditAmountType'EnumCreditBalanceTransaction
          | val GHC.Classes.== "discount" -> InvoicesResourcePretaxCreditAmountType'EnumDiscount
          | GHC.Base.otherwise -> InvoicesResourcePretaxCreditAmountType'Other val
      )
