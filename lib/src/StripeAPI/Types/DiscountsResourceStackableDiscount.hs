{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema DiscountsResourceStackableDiscount
module StripeAPI.Types.DiscountsResourceStackableDiscount where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Coupon
import {-# SOURCE #-} StripeAPI.Types.Discount
import {-# SOURCE #-} StripeAPI.Types.PromotionCode
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.discounts_resource_stackable_discount@ in the specification.
data DiscountsResourceStackableDiscount = DiscountsResourceStackableDiscount
  { -- | coupon: ID of the coupon to create a new discount for.
    discountsResourceStackableDiscountCoupon :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DiscountsResourceStackableDiscountCoupon'NonNullableVariants)),
    -- | discount: ID of an existing discount on the object (or one of its ancestors) to reuse.
    discountsResourceStackableDiscountDiscount :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DiscountsResourceStackableDiscountDiscount'NonNullableVariants)),
    -- | promotion_code: ID of the promotion code to create a new discount for.
    discountsResourceStackableDiscountPromotionCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DiscountsResourceStackableDiscountPromotionCode'NonNullableVariants))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DiscountsResourceStackableDiscount where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon" Data.Aeson.Types.ToJSON..=)) (discountsResourceStackableDiscountCoupon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (discountsResourceStackableDiscountDiscount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promotion_code" Data.Aeson.Types.ToJSON..=)) (discountsResourceStackableDiscountPromotionCode obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon" Data.Aeson.Types.ToJSON..=)) (discountsResourceStackableDiscountCoupon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (discountsResourceStackableDiscountDiscount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promotion_code" Data.Aeson.Types.ToJSON..=)) (discountsResourceStackableDiscountPromotionCode obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DiscountsResourceStackableDiscount where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DiscountsResourceStackableDiscount" (\obj -> ((GHC.Base.pure DiscountsResourceStackableDiscount GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "coupon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "discount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promotion_code"))

-- | Create a new 'DiscountsResourceStackableDiscount' with all required fields.
mkDiscountsResourceStackableDiscount :: DiscountsResourceStackableDiscount
mkDiscountsResourceStackableDiscount =
  DiscountsResourceStackableDiscount
    { discountsResourceStackableDiscountCoupon = GHC.Maybe.Nothing,
      discountsResourceStackableDiscountDiscount = GHC.Maybe.Nothing,
      discountsResourceStackableDiscountPromotionCode = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @components.schemas.discounts_resource_stackable_discount.properties.coupon.anyOf@ in the specification.
--
-- ID of the coupon to create a new discount for.
data DiscountsResourceStackableDiscountCoupon'NonNullableVariants
  = DiscountsResourceStackableDiscountCoupon'NonNullableText Data.Text.Internal.Text
  | DiscountsResourceStackableDiscountCoupon'NonNullableCoupon Coupon
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON DiscountsResourceStackableDiscountCoupon'NonNullableVariants where
  toJSON (DiscountsResourceStackableDiscountCoupon'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (DiscountsResourceStackableDiscountCoupon'NonNullableCoupon a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON DiscountsResourceStackableDiscountCoupon'NonNullableVariants where
  parseJSON val = case (DiscountsResourceStackableDiscountCoupon'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DiscountsResourceStackableDiscountCoupon'NonNullableCoupon Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @components.schemas.discounts_resource_stackable_discount.properties.discount.anyOf@ in the specification.
--
-- ID of an existing discount on the object (or one of its ancestors) to reuse.
data DiscountsResourceStackableDiscountDiscount'NonNullableVariants
  = DiscountsResourceStackableDiscountDiscount'NonNullableText Data.Text.Internal.Text
  | DiscountsResourceStackableDiscountDiscount'NonNullableDiscount Discount
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON DiscountsResourceStackableDiscountDiscount'NonNullableVariants where
  toJSON (DiscountsResourceStackableDiscountDiscount'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (DiscountsResourceStackableDiscountDiscount'NonNullableDiscount a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON DiscountsResourceStackableDiscountDiscount'NonNullableVariants where
  parseJSON val = case (DiscountsResourceStackableDiscountDiscount'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DiscountsResourceStackableDiscountDiscount'NonNullableDiscount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @components.schemas.discounts_resource_stackable_discount.properties.promotion_code.anyOf@ in the specification.
--
-- ID of the promotion code to create a new discount for.
data DiscountsResourceStackableDiscountPromotionCode'NonNullableVariants
  = DiscountsResourceStackableDiscountPromotionCode'NonNullableText Data.Text.Internal.Text
  | DiscountsResourceStackableDiscountPromotionCode'NonNullablePromotionCode PromotionCode
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON DiscountsResourceStackableDiscountPromotionCode'NonNullableVariants where
  toJSON (DiscountsResourceStackableDiscountPromotionCode'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (DiscountsResourceStackableDiscountPromotionCode'NonNullablePromotionCode a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON DiscountsResourceStackableDiscountPromotionCode'NonNullableVariants where
  parseJSON val = case (DiscountsResourceStackableDiscountPromotionCode'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DiscountsResourceStackableDiscountPromotionCode'NonNullablePromotionCode Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
