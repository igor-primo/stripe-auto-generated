{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema IssuingAuthorizationFleetCardholderPromptData
module StripeAPI.Types.IssuingAuthorizationFleetCardholderPromptData where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.issuing_authorization_fleet_cardholder_prompt_data@ in the specification.
data IssuingAuthorizationFleetCardholderPromptData = IssuingAuthorizationFleetCardholderPromptData
  { -- | alphanumeric_id: [Deprecated] An alphanumeric ID, though typical point of sales only support numeric entry. The card program can be configured to prompt for a vehicle ID, driver ID, or generic ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingAuthorizationFleetCardholderPromptDataAlphanumericId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | driver_id: Driver ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingAuthorizationFleetCardholderPromptDataDriverId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | odometer: Odometer reading.
    issuingAuthorizationFleetCardholderPromptDataOdometer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | unspecified_id: An alphanumeric ID. This field is used when a vehicle ID, driver ID, or generic ID is entered by the cardholder, but the merchant or card network did not specify the prompt type.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingAuthorizationFleetCardholderPromptDataUnspecifiedId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | user_id: User ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingAuthorizationFleetCardholderPromptDataUserId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | vehicle_number: Vehicle number.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingAuthorizationFleetCardholderPromptDataVehicleNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingAuthorizationFleetCardholderPromptData where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alphanumeric_id" Data.Aeson.Types.ToJSON..=)) (issuingAuthorizationFleetCardholderPromptDataAlphanumericId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("driver_id" Data.Aeson.Types.ToJSON..=)) (issuingAuthorizationFleetCardholderPromptDataDriverId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("odometer" Data.Aeson.Types.ToJSON..=)) (issuingAuthorizationFleetCardholderPromptDataOdometer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unspecified_id" Data.Aeson.Types.ToJSON..=)) (issuingAuthorizationFleetCardholderPromptDataUnspecifiedId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_id" Data.Aeson.Types.ToJSON..=)) (issuingAuthorizationFleetCardholderPromptDataUserId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vehicle_number" Data.Aeson.Types.ToJSON..=)) (issuingAuthorizationFleetCardholderPromptDataVehicleNumber obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alphanumeric_id" Data.Aeson.Types.ToJSON..=)) (issuingAuthorizationFleetCardholderPromptDataAlphanumericId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("driver_id" Data.Aeson.Types.ToJSON..=)) (issuingAuthorizationFleetCardholderPromptDataDriverId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("odometer" Data.Aeson.Types.ToJSON..=)) (issuingAuthorizationFleetCardholderPromptDataOdometer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unspecified_id" Data.Aeson.Types.ToJSON..=)) (issuingAuthorizationFleetCardholderPromptDataUnspecifiedId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_id" Data.Aeson.Types.ToJSON..=)) (issuingAuthorizationFleetCardholderPromptDataUserId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vehicle_number" Data.Aeson.Types.ToJSON..=)) (issuingAuthorizationFleetCardholderPromptDataVehicleNumber obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingAuthorizationFleetCardholderPromptData where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingAuthorizationFleetCardholderPromptData" (\obj -> (((((GHC.Base.pure IssuingAuthorizationFleetCardholderPromptData GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alphanumeric_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "driver_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "odometer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unspecified_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "vehicle_number"))

-- | Create a new 'IssuingAuthorizationFleetCardholderPromptData' with all required fields.
mkIssuingAuthorizationFleetCardholderPromptData :: IssuingAuthorizationFleetCardholderPromptData
mkIssuingAuthorizationFleetCardholderPromptData =
  IssuingAuthorizationFleetCardholderPromptData
    { issuingAuthorizationFleetCardholderPromptDataAlphanumericId = GHC.Maybe.Nothing,
      issuingAuthorizationFleetCardholderPromptDataDriverId = GHC.Maybe.Nothing,
      issuingAuthorizationFleetCardholderPromptDataOdometer = GHC.Maybe.Nothing,
      issuingAuthorizationFleetCardholderPromptDataUnspecifiedId = GHC.Maybe.Nothing,
      issuingAuthorizationFleetCardholderPromptDataUserId = GHC.Maybe.Nothing,
      issuingAuthorizationFleetCardholderPromptDataVehicleNumber = GHC.Maybe.Nothing
    }
