{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema Billing_CreditBalanceTransaction
module StripeAPI.Types.Billing_CreditBalanceTransaction where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.BillingCreditGrantsResourceAmount
import {-# SOURCE #-} StripeAPI.Types.BillingCreditGrantsResourceBalanceCredit
import {-# SOURCE #-} StripeAPI.Types.BillingCreditGrantsResourceBalanceCreditsApplicationInvoiceVoided
import {-# SOURCE #-} StripeAPI.Types.BillingCreditGrantsResourceBalanceCreditsApplied
import {-# SOURCE #-} StripeAPI.Types.BillingCreditGrantsResourceBalanceDebit
import {-# SOURCE #-} StripeAPI.Types.Billing_CreditGrant
import {-# SOURCE #-} StripeAPI.Types.Invoice
import {-# SOURCE #-} StripeAPI.Types.TestHelpers_TestClock
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.billing.credit_balance_transaction@ in the specification.
--
-- A credit balance transaction is a resource representing a transaction (either a credit or a debit) against an existing credit grant.
data Billing'creditBalanceTransaction = Billing'creditBalanceTransaction
  { -- | created: Time at which the object was created. Measured in seconds since the Unix epoch.
    billing'creditBalanceTransactionCreated :: GHC.Types.Int,
    -- | credit: Credit details for this credit balance transaction. Only present if type is \`credit\`.
    billing'creditBalanceTransactionCredit :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Billing'creditBalanceTransactionCredit'NonNullable)),
    -- | credit_grant: The credit grant associated with this credit balance transaction.
    billing'creditBalanceTransactionCreditGrant :: Billing'creditBalanceTransactionCreditGrant'Variants,
    -- | debit: Debit details for this credit balance transaction. Only present if type is \`debit\`.
    billing'creditBalanceTransactionDebit :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Billing'creditBalanceTransactionDebit'NonNullable)),
    -- | effective_at: The effective time of this credit balance transaction.
    billing'creditBalanceTransactionEffectiveAt :: GHC.Types.Int,
    -- | id: Unique identifier for the object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    billing'creditBalanceTransactionId :: Data.Text.Internal.Text,
    -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
    billing'creditBalanceTransactionLivemode :: GHC.Types.Bool,
    -- | test_clock: ID of the test clock this credit balance transaction belongs to.
    billing'creditBalanceTransactionTestClock :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Billing'creditBalanceTransactionTestClock'NonNullableVariants)),
    -- | type: The type of credit balance transaction (credit or debit).
    billing'creditBalanceTransactionType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Billing'creditBalanceTransactionType'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditBalanceTransaction where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["created" Data.Aeson.Types.ToJSON..= billing'creditBalanceTransactionCreated obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credit" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionCredit obj) : ["credit_grant" Data.Aeson.Types.ToJSON..= billing'creditBalanceTransactionCreditGrant obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("debit" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionDebit obj) : ["effective_at" Data.Aeson.Types.ToJSON..= billing'creditBalanceTransactionEffectiveAt obj] : ["id" Data.Aeson.Types.ToJSON..= billing'creditBalanceTransactionId obj] : ["livemode" Data.Aeson.Types.ToJSON..= billing'creditBalanceTransactionLivemode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("test_clock" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionTestClock obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionType obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "billing.credit_balance_transaction"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["created" Data.Aeson.Types.ToJSON..= billing'creditBalanceTransactionCreated obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credit" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionCredit obj) : ["credit_grant" Data.Aeson.Types.ToJSON..= billing'creditBalanceTransactionCreditGrant obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("debit" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionDebit obj) : ["effective_at" Data.Aeson.Types.ToJSON..= billing'creditBalanceTransactionEffectiveAt obj] : ["id" Data.Aeson.Types.ToJSON..= billing'creditBalanceTransactionId obj] : ["livemode" Data.Aeson.Types.ToJSON..= billing'creditBalanceTransactionLivemode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("test_clock" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionTestClock obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionType obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "billing.credit_balance_transaction"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditBalanceTransaction where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Billing'creditBalanceTransaction" (\obj -> ((((((((GHC.Base.pure Billing'creditBalanceTransaction GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "credit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "credit_grant")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "effective_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "test_clock")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type"))

-- | Create a new 'Billing'creditBalanceTransaction' with all required fields.
mkBilling'creditBalanceTransaction ::
  -- | 'billing'creditBalanceTransactionCreated'
  GHC.Types.Int ->
  -- | 'billing'creditBalanceTransactionCreditGrant'
  Billing'creditBalanceTransactionCreditGrant'Variants ->
  -- | 'billing'creditBalanceTransactionEffectiveAt'
  GHC.Types.Int ->
  -- | 'billing'creditBalanceTransactionId'
  Data.Text.Internal.Text ->
  -- | 'billing'creditBalanceTransactionLivemode'
  GHC.Types.Bool ->
  Billing'creditBalanceTransaction
mkBilling'creditBalanceTransaction billing'creditBalanceTransactionCreated billing'creditBalanceTransactionCreditGrant billing'creditBalanceTransactionEffectiveAt billing'creditBalanceTransactionId billing'creditBalanceTransactionLivemode =
  Billing'creditBalanceTransaction
    { billing'creditBalanceTransactionCreated = billing'creditBalanceTransactionCreated,
      billing'creditBalanceTransactionCredit = GHC.Maybe.Nothing,
      billing'creditBalanceTransactionCreditGrant = billing'creditBalanceTransactionCreditGrant,
      billing'creditBalanceTransactionDebit = GHC.Maybe.Nothing,
      billing'creditBalanceTransactionEffectiveAt = billing'creditBalanceTransactionEffectiveAt,
      billing'creditBalanceTransactionId = billing'creditBalanceTransactionId,
      billing'creditBalanceTransactionLivemode = billing'creditBalanceTransactionLivemode,
      billing'creditBalanceTransactionTestClock = GHC.Maybe.Nothing,
      billing'creditBalanceTransactionType = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.billing.credit_balance_transaction.properties.credit.anyOf@ in the specification.
--
-- Credit details for this credit balance transaction. Only present if type is \\\`credit\\\`.
data Billing'creditBalanceTransactionCredit'NonNullable = Billing'creditBalanceTransactionCredit'NonNullable
  { -- | amount:
    billing'creditBalanceTransactionCredit'NonNullableAmount :: (GHC.Maybe.Maybe BillingCreditGrantsResourceAmount),
    -- | credits_application_invoice_voided: Details of the invoice to which the reinstated credits were originally applied. Only present if \`type\` is \`credits_application_invoice_voided\`.
    billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullable)),
    -- | type: The type of credit transaction.
    billing'creditBalanceTransactionCredit'NonNullableType :: (GHC.Maybe.Maybe Billing'creditBalanceTransactionCredit'NonNullableType')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditBalanceTransactionCredit'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionCredit'NonNullableAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credits_application_invoice_voided" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionCredit'NonNullableType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionCredit'NonNullableAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credits_application_invoice_voided" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionCredit'NonNullableType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditBalanceTransactionCredit'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Billing'creditBalanceTransactionCredit'NonNullable" (\obj -> ((GHC.Base.pure Billing'creditBalanceTransactionCredit'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "credits_application_invoice_voided")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type"))

-- | Create a new 'Billing'creditBalanceTransactionCredit'NonNullable' with all required fields.
mkBilling'creditBalanceTransactionCredit'NonNullable :: Billing'creditBalanceTransactionCredit'NonNullable
mkBilling'creditBalanceTransactionCredit'NonNullable =
  Billing'creditBalanceTransactionCredit'NonNullable
    { billing'creditBalanceTransactionCredit'NonNullableAmount = GHC.Maybe.Nothing,
      billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided = GHC.Maybe.Nothing,
      billing'creditBalanceTransactionCredit'NonNullableType = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.billing.credit_balance_transaction.properties.credit.anyOf.properties.credits_application_invoice_voided.anyOf@ in the specification.
--
-- Details of the invoice to which the reinstated credits were originally applied. Only present if \\\`type\\\` is \\\`credits_application_invoice_voided\\\`.
data Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullable = Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullable
  { -- | invoice: The invoice to which the reinstated billing credits were originally applied.
    billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoice :: (GHC.Maybe.Maybe Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoice'Variants),
    -- | invoice_line_item: The invoice line item to which the reinstated billing credits were originally applied.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoiceLineItem :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_line_item" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoiceLineItem obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_line_item" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoiceLineItem obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullable" (\obj -> (GHC.Base.pure Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_line_item"))

-- | Create a new 'Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullable' with all required fields.
mkBilling'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullable :: Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullable
mkBilling'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullable =
  Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullable
    { billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoice = GHC.Maybe.Nothing,
      billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoiceLineItem = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @components.schemas.billing.credit_balance_transaction.properties.credit.anyOf.properties.credits_application_invoice_voided.anyOf.properties.invoice.anyOf@ in the specification.
--
-- The invoice to which the reinstated billing credits were originally applied.
data Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoice'Variants
  = Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoice'Text Data.Text.Internal.Text
  | Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoice'Invoice Invoice
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoice'Variants where
  toJSON (Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoice'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoice'Invoice a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoice'Variants where
  parseJSON val = case (Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoice'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Billing'creditBalanceTransactionCredit'NonNullableCreditsApplicationInvoiceVoided'NonNullableInvoice'Invoice Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @components.schemas.billing.credit_balance_transaction.properties.credit.anyOf.properties.type@ in the specification.
--
-- The type of credit transaction.
data Billing'creditBalanceTransactionCredit'NonNullableType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Billing'creditBalanceTransactionCredit'NonNullableType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Billing'creditBalanceTransactionCredit'NonNullableType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"credits_application_invoice_voided"@
    Billing'creditBalanceTransactionCredit'NonNullableType'EnumCreditsApplicationInvoiceVoided
  | -- | Represents the JSON value @"credits_granted"@
    Billing'creditBalanceTransactionCredit'NonNullableType'EnumCreditsGranted
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditBalanceTransactionCredit'NonNullableType' where
  toJSON (Billing'creditBalanceTransactionCredit'NonNullableType'Other val) = val
  toJSON (Billing'creditBalanceTransactionCredit'NonNullableType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Billing'creditBalanceTransactionCredit'NonNullableType'EnumCreditsApplicationInvoiceVoided) = "credits_application_invoice_voided"
  toJSON (Billing'creditBalanceTransactionCredit'NonNullableType'EnumCreditsGranted) = "credits_granted"

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditBalanceTransactionCredit'NonNullableType' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "credits_application_invoice_voided" -> Billing'creditBalanceTransactionCredit'NonNullableType'EnumCreditsApplicationInvoiceVoided
          | val GHC.Classes.== "credits_granted" -> Billing'creditBalanceTransactionCredit'NonNullableType'EnumCreditsGranted
          | GHC.Base.otherwise -> Billing'creditBalanceTransactionCredit'NonNullableType'Other val
      )

-- | Defines the oneOf schema located at @components.schemas.billing.credit_balance_transaction.properties.credit_grant.anyOf@ in the specification.
--
-- The credit grant associated with this credit balance transaction.
data Billing'creditBalanceTransactionCreditGrant'Variants
  = Billing'creditBalanceTransactionCreditGrant'Text Data.Text.Internal.Text
  | Billing'creditBalanceTransactionCreditGrant'Billing'creditGrant Billing'creditGrant
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditBalanceTransactionCreditGrant'Variants where
  toJSON (Billing'creditBalanceTransactionCreditGrant'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Billing'creditBalanceTransactionCreditGrant'Billing'creditGrant a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditBalanceTransactionCreditGrant'Variants where
  parseJSON val = case (Billing'creditBalanceTransactionCreditGrant'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Billing'creditBalanceTransactionCreditGrant'Billing'creditGrant Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @components.schemas.billing.credit_balance_transaction.properties.debit.anyOf@ in the specification.
--
-- Debit details for this credit balance transaction. Only present if type is \\\`debit\\\`.
data Billing'creditBalanceTransactionDebit'NonNullable = Billing'creditBalanceTransactionDebit'NonNullable
  { -- | amount:
    billing'creditBalanceTransactionDebit'NonNullableAmount :: (GHC.Maybe.Maybe BillingCreditGrantsResourceAmount),
    -- | credits_applied: Details of how the billing credits were applied to an invoice. Only present if \`type\` is \`credits_applied\`.
    billing'creditBalanceTransactionDebit'NonNullableCreditsApplied :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullable)),
    -- | type: The type of debit transaction.
    billing'creditBalanceTransactionDebit'NonNullableType :: (GHC.Maybe.Maybe Billing'creditBalanceTransactionDebit'NonNullableType')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditBalanceTransactionDebit'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionDebit'NonNullableAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credits_applied" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionDebit'NonNullableCreditsApplied obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionDebit'NonNullableType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionDebit'NonNullableAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credits_applied" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionDebit'NonNullableCreditsApplied obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionDebit'NonNullableType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditBalanceTransactionDebit'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Billing'creditBalanceTransactionDebit'NonNullable" (\obj -> ((GHC.Base.pure Billing'creditBalanceTransactionDebit'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "credits_applied")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type"))

-- | Create a new 'Billing'creditBalanceTransactionDebit'NonNullable' with all required fields.
mkBilling'creditBalanceTransactionDebit'NonNullable :: Billing'creditBalanceTransactionDebit'NonNullable
mkBilling'creditBalanceTransactionDebit'NonNullable =
  Billing'creditBalanceTransactionDebit'NonNullable
    { billing'creditBalanceTransactionDebit'NonNullableAmount = GHC.Maybe.Nothing,
      billing'creditBalanceTransactionDebit'NonNullableCreditsApplied = GHC.Maybe.Nothing,
      billing'creditBalanceTransactionDebit'NonNullableType = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.billing.credit_balance_transaction.properties.debit.anyOf.properties.credits_applied.anyOf@ in the specification.
--
-- Details of how the billing credits were applied to an invoice. Only present if \\\`type\\\` is \\\`credits_applied\\\`.
data Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullable = Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullable
  { -- | invoice: The invoice to which the billing credits were applied.
    billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoice :: (GHC.Maybe.Maybe Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoice'Variants),
    -- | invoice_line_item: The invoice line item to which the billing credits were applied.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoiceLineItem :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_line_item" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoiceLineItem obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_line_item" Data.Aeson.Types.ToJSON..=)) (billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoiceLineItem obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullable" (\obj -> (GHC.Base.pure Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_line_item"))

-- | Create a new 'Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullable' with all required fields.
mkBilling'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullable :: Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullable
mkBilling'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullable =
  Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullable
    { billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoice = GHC.Maybe.Nothing,
      billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoiceLineItem = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @components.schemas.billing.credit_balance_transaction.properties.debit.anyOf.properties.credits_applied.anyOf.properties.invoice.anyOf@ in the specification.
--
-- The invoice to which the billing credits were applied.
data Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoice'Variants
  = Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoice'Text Data.Text.Internal.Text
  | Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoice'Invoice Invoice
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoice'Variants where
  toJSON (Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoice'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoice'Invoice a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoice'Variants where
  parseJSON val = case (Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoice'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Billing'creditBalanceTransactionDebit'NonNullableCreditsApplied'NonNullableInvoice'Invoice Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @components.schemas.billing.credit_balance_transaction.properties.debit.anyOf.properties.type@ in the specification.
--
-- The type of debit transaction.
data Billing'creditBalanceTransactionDebit'NonNullableType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Billing'creditBalanceTransactionDebit'NonNullableType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Billing'creditBalanceTransactionDebit'NonNullableType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"credits_applied"@
    Billing'creditBalanceTransactionDebit'NonNullableType'EnumCreditsApplied
  | -- | Represents the JSON value @"credits_expired"@
    Billing'creditBalanceTransactionDebit'NonNullableType'EnumCreditsExpired
  | -- | Represents the JSON value @"credits_voided"@
    Billing'creditBalanceTransactionDebit'NonNullableType'EnumCreditsVoided
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditBalanceTransactionDebit'NonNullableType' where
  toJSON (Billing'creditBalanceTransactionDebit'NonNullableType'Other val) = val
  toJSON (Billing'creditBalanceTransactionDebit'NonNullableType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Billing'creditBalanceTransactionDebit'NonNullableType'EnumCreditsApplied) = "credits_applied"
  toJSON (Billing'creditBalanceTransactionDebit'NonNullableType'EnumCreditsExpired) = "credits_expired"
  toJSON (Billing'creditBalanceTransactionDebit'NonNullableType'EnumCreditsVoided) = "credits_voided"

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditBalanceTransactionDebit'NonNullableType' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "credits_applied" -> Billing'creditBalanceTransactionDebit'NonNullableType'EnumCreditsApplied
          | val GHC.Classes.== "credits_expired" -> Billing'creditBalanceTransactionDebit'NonNullableType'EnumCreditsExpired
          | val GHC.Classes.== "credits_voided" -> Billing'creditBalanceTransactionDebit'NonNullableType'EnumCreditsVoided
          | GHC.Base.otherwise -> Billing'creditBalanceTransactionDebit'NonNullableType'Other val
      )

-- | Defines the oneOf schema located at @components.schemas.billing.credit_balance_transaction.properties.test_clock.anyOf@ in the specification.
--
-- ID of the test clock this credit balance transaction belongs to.
data Billing'creditBalanceTransactionTestClock'NonNullableVariants
  = Billing'creditBalanceTransactionTestClock'NonNullableText Data.Text.Internal.Text
  | Billing'creditBalanceTransactionTestClock'NonNullableTestHelpers'testClock TestHelpers'testClock
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditBalanceTransactionTestClock'NonNullableVariants where
  toJSON (Billing'creditBalanceTransactionTestClock'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Billing'creditBalanceTransactionTestClock'NonNullableTestHelpers'testClock a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditBalanceTransactionTestClock'NonNullableVariants where
  parseJSON val = case (Billing'creditBalanceTransactionTestClock'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Billing'creditBalanceTransactionTestClock'NonNullableTestHelpers'testClock Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @components.schemas.billing.credit_balance_transaction.properties.type@ in the specification.
--
-- The type of credit balance transaction (credit or debit).
data Billing'creditBalanceTransactionType'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Billing'creditBalanceTransactionType'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Billing'creditBalanceTransactionType'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"credit"@
    Billing'creditBalanceTransactionType'NonNullableEnumCredit
  | -- | Represents the JSON value @"debit"@
    Billing'creditBalanceTransactionType'NonNullableEnumDebit
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Billing'creditBalanceTransactionType'NonNullable where
  toJSON (Billing'creditBalanceTransactionType'NonNullableOther val) = val
  toJSON (Billing'creditBalanceTransactionType'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Billing'creditBalanceTransactionType'NonNullableEnumCredit) = "credit"
  toJSON (Billing'creditBalanceTransactionType'NonNullableEnumDebit) = "debit"

instance Data.Aeson.Types.FromJSON.FromJSON Billing'creditBalanceTransactionType'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "credit" -> Billing'creditBalanceTransactionType'NonNullableEnumCredit
          | val GHC.Classes.== "debit" -> Billing'creditBalanceTransactionType'NonNullableEnumDebit
          | GHC.Base.otherwise -> Billing'creditBalanceTransactionType'NonNullableOther val
      )
