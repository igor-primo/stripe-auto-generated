{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema BillingCreditGrantsResourceBalanceDebit
module StripeAPI.Types.BillingCreditGrantsResourceBalanceDebit where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.BillingCreditGrantsResourceAmount
import {-# SOURCE #-} StripeAPI.Types.BillingCreditGrantsResourceBalanceCreditsApplied
import {-# SOURCE #-} StripeAPI.Types.Invoice
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.billing_credit_grants_resource_balance_debit@ in the specification.
data BillingCreditGrantsResourceBalanceDebit = BillingCreditGrantsResourceBalanceDebit
  { -- | amount:
    billingCreditGrantsResourceBalanceDebitAmount :: BillingCreditGrantsResourceAmount,
    -- | credits_applied: Details of how the billing credits were applied to an invoice. Only present if \`type\` is \`credits_applied\`.
    billingCreditGrantsResourceBalanceDebitCreditsApplied :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullable)),
    -- | type: The type of debit transaction.
    billingCreditGrantsResourceBalanceDebitType :: BillingCreditGrantsResourceBalanceDebitType'
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON BillingCreditGrantsResourceBalanceDebit where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= billingCreditGrantsResourceBalanceDebitAmount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credits_applied" Data.Aeson.Types.ToJSON..=)) (billingCreditGrantsResourceBalanceDebitCreditsApplied obj) : ["type" Data.Aeson.Types.ToJSON..= billingCreditGrantsResourceBalanceDebitType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= billingCreditGrantsResourceBalanceDebitAmount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credits_applied" Data.Aeson.Types.ToJSON..=)) (billingCreditGrantsResourceBalanceDebitCreditsApplied obj) : ["type" Data.Aeson.Types.ToJSON..= billingCreditGrantsResourceBalanceDebitType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON BillingCreditGrantsResourceBalanceDebit where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "BillingCreditGrantsResourceBalanceDebit" (\obj -> ((GHC.Base.pure BillingCreditGrantsResourceBalanceDebit GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "credits_applied")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))

-- | Create a new 'BillingCreditGrantsResourceBalanceDebit' with all required fields.
mkBillingCreditGrantsResourceBalanceDebit ::
  -- | 'billingCreditGrantsResourceBalanceDebitAmount'
  BillingCreditGrantsResourceAmount ->
  -- | 'billingCreditGrantsResourceBalanceDebitType'
  BillingCreditGrantsResourceBalanceDebitType' ->
  BillingCreditGrantsResourceBalanceDebit
mkBillingCreditGrantsResourceBalanceDebit billingCreditGrantsResourceBalanceDebitAmount billingCreditGrantsResourceBalanceDebitType =
  BillingCreditGrantsResourceBalanceDebit
    { billingCreditGrantsResourceBalanceDebitAmount = billingCreditGrantsResourceBalanceDebitAmount,
      billingCreditGrantsResourceBalanceDebitCreditsApplied = GHC.Maybe.Nothing,
      billingCreditGrantsResourceBalanceDebitType = billingCreditGrantsResourceBalanceDebitType
    }

-- | Defines the object schema located at @components.schemas.billing_credit_grants_resource_balance_debit.properties.credits_applied.anyOf@ in the specification.
--
-- Details of how the billing credits were applied to an invoice. Only present if \\\`type\\\` is \\\`credits_applied\\\`.
data BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullable = BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullable
  { -- | invoice: The invoice to which the billing credits were applied.
    billingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoice :: (GHC.Maybe.Maybe BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoice'Variants),
    -- | invoice_line_item: The invoice line item to which the billing credits were applied.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    billingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoiceLineItem :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (billingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_line_item" Data.Aeson.Types.ToJSON..=)) (billingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoiceLineItem obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (billingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_line_item" Data.Aeson.Types.ToJSON..=)) (billingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoiceLineItem obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullable" (\obj -> (GHC.Base.pure BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_line_item"))

-- | Create a new 'BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullable' with all required fields.
mkBillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullable :: BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullable
mkBillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullable =
  BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullable
    { billingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoice = GHC.Maybe.Nothing,
      billingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoiceLineItem = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @components.schemas.billing_credit_grants_resource_balance_debit.properties.credits_applied.anyOf.properties.invoice.anyOf@ in the specification.
--
-- The invoice to which the billing credits were applied.
data BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoice'Variants
  = BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoice'Text Data.Text.Internal.Text
  | BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoice'Invoice Invoice
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoice'Variants where
  toJSON (BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoice'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoice'Invoice a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoice'Variants where
  parseJSON val = case (BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoice'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((BillingCreditGrantsResourceBalanceDebitCreditsApplied'NonNullableInvoice'Invoice Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @components.schemas.billing_credit_grants_resource_balance_debit.properties.type@ in the specification.
--
-- The type of debit transaction.
data BillingCreditGrantsResourceBalanceDebitType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    BillingCreditGrantsResourceBalanceDebitType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    BillingCreditGrantsResourceBalanceDebitType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"credits_applied"@
    BillingCreditGrantsResourceBalanceDebitType'EnumCreditsApplied
  | -- | Represents the JSON value @"credits_expired"@
    BillingCreditGrantsResourceBalanceDebitType'EnumCreditsExpired
  | -- | Represents the JSON value @"credits_voided"@
    BillingCreditGrantsResourceBalanceDebitType'EnumCreditsVoided
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON BillingCreditGrantsResourceBalanceDebitType' where
  toJSON (BillingCreditGrantsResourceBalanceDebitType'Other val) = val
  toJSON (BillingCreditGrantsResourceBalanceDebitType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (BillingCreditGrantsResourceBalanceDebitType'EnumCreditsApplied) = "credits_applied"
  toJSON (BillingCreditGrantsResourceBalanceDebitType'EnumCreditsExpired) = "credits_expired"
  toJSON (BillingCreditGrantsResourceBalanceDebitType'EnumCreditsVoided) = "credits_voided"

instance Data.Aeson.Types.FromJSON.FromJSON BillingCreditGrantsResourceBalanceDebitType' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "credits_applied" -> BillingCreditGrantsResourceBalanceDebitType'EnumCreditsApplied
          | val GHC.Classes.== "credits_expired" -> BillingCreditGrantsResourceBalanceDebitType'EnumCreditsExpired
          | val GHC.Classes.== "credits_voided" -> BillingCreditGrantsResourceBalanceDebitType'EnumCreditsVoided
          | GHC.Base.otherwise -> BillingCreditGrantsResourceBalanceDebitType'Other val
      )
