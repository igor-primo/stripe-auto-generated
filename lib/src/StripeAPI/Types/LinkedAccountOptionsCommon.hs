{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema LinkedAccountOptionsCommon
module StripeAPI.Types.LinkedAccountOptionsCommon where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.PaymentFlowsPrivatePaymentMethodsFinancialConnectionsCommonLinkedAccountOptionsFilters
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.linked_account_options_common@ in the specification.
data LinkedAccountOptionsCommon = LinkedAccountOptionsCommon
  { -- | filters:
    linkedAccountOptionsCommonFilters :: (GHC.Maybe.Maybe PaymentFlowsPrivatePaymentMethodsFinancialConnectionsCommonLinkedAccountOptionsFilters),
    -- | permissions: The list of permissions to request. The \`payment_method\` permission must be included.
    linkedAccountOptionsCommonPermissions :: (GHC.Maybe.Maybe [LinkedAccountOptionsCommonPermissions']),
    -- | prefetch: Data features requested to be retrieved upon account creation.
    linkedAccountOptionsCommonPrefetch :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable [LinkedAccountOptionsCommonPrefetch'NonNullable])),
    -- | return_url: For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    linkedAccountOptionsCommonReturnUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON LinkedAccountOptionsCommon where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("filters" Data.Aeson.Types.ToJSON..=)) (linkedAccountOptionsCommonFilters obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("permissions" Data.Aeson.Types.ToJSON..=)) (linkedAccountOptionsCommonPermissions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("prefetch" Data.Aeson.Types.ToJSON..=)) (linkedAccountOptionsCommonPrefetch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("return_url" Data.Aeson.Types.ToJSON..=)) (linkedAccountOptionsCommonReturnUrl obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("filters" Data.Aeson.Types.ToJSON..=)) (linkedAccountOptionsCommonFilters obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("permissions" Data.Aeson.Types.ToJSON..=)) (linkedAccountOptionsCommonPermissions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("prefetch" Data.Aeson.Types.ToJSON..=)) (linkedAccountOptionsCommonPrefetch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("return_url" Data.Aeson.Types.ToJSON..=)) (linkedAccountOptionsCommonReturnUrl obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON LinkedAccountOptionsCommon where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "LinkedAccountOptionsCommon" (\obj -> (((GHC.Base.pure LinkedAccountOptionsCommon GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "filters")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "permissions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "prefetch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "return_url"))

-- | Create a new 'LinkedAccountOptionsCommon' with all required fields.
mkLinkedAccountOptionsCommon :: LinkedAccountOptionsCommon
mkLinkedAccountOptionsCommon =
  LinkedAccountOptionsCommon
    { linkedAccountOptionsCommonFilters = GHC.Maybe.Nothing,
      linkedAccountOptionsCommonPermissions = GHC.Maybe.Nothing,
      linkedAccountOptionsCommonPrefetch = GHC.Maybe.Nothing,
      linkedAccountOptionsCommonReturnUrl = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.linked_account_options_common.properties.permissions.items@ in the specification.
data LinkedAccountOptionsCommonPermissions'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    LinkedAccountOptionsCommonPermissions'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    LinkedAccountOptionsCommonPermissions'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"balances"@
    LinkedAccountOptionsCommonPermissions'EnumBalances
  | -- | Represents the JSON value @"ownership"@
    LinkedAccountOptionsCommonPermissions'EnumOwnership
  | -- | Represents the JSON value @"payment_method"@
    LinkedAccountOptionsCommonPermissions'EnumPaymentMethod
  | -- | Represents the JSON value @"transactions"@
    LinkedAccountOptionsCommonPermissions'EnumTransactions
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON LinkedAccountOptionsCommonPermissions' where
  toJSON (LinkedAccountOptionsCommonPermissions'Other val) = val
  toJSON (LinkedAccountOptionsCommonPermissions'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (LinkedAccountOptionsCommonPermissions'EnumBalances) = "balances"
  toJSON (LinkedAccountOptionsCommonPermissions'EnumOwnership) = "ownership"
  toJSON (LinkedAccountOptionsCommonPermissions'EnumPaymentMethod) = "payment_method"
  toJSON (LinkedAccountOptionsCommonPermissions'EnumTransactions) = "transactions"

instance Data.Aeson.Types.FromJSON.FromJSON LinkedAccountOptionsCommonPermissions' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "balances" -> LinkedAccountOptionsCommonPermissions'EnumBalances
          | val GHC.Classes.== "ownership" -> LinkedAccountOptionsCommonPermissions'EnumOwnership
          | val GHC.Classes.== "payment_method" -> LinkedAccountOptionsCommonPermissions'EnumPaymentMethod
          | val GHC.Classes.== "transactions" -> LinkedAccountOptionsCommonPermissions'EnumTransactions
          | GHC.Base.otherwise -> LinkedAccountOptionsCommonPermissions'Other val
      )

-- | Defines the enum schema located at @components.schemas.linked_account_options_common.properties.prefetch.items@ in the specification.
data LinkedAccountOptionsCommonPrefetch'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    LinkedAccountOptionsCommonPrefetch'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    LinkedAccountOptionsCommonPrefetch'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"balances"@
    LinkedAccountOptionsCommonPrefetch'NonNullableEnumBalances
  | -- | Represents the JSON value @"ownership"@
    LinkedAccountOptionsCommonPrefetch'NonNullableEnumOwnership
  | -- | Represents the JSON value @"transactions"@
    LinkedAccountOptionsCommonPrefetch'NonNullableEnumTransactions
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON LinkedAccountOptionsCommonPrefetch'NonNullable where
  toJSON (LinkedAccountOptionsCommonPrefetch'NonNullableOther val) = val
  toJSON (LinkedAccountOptionsCommonPrefetch'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (LinkedAccountOptionsCommonPrefetch'NonNullableEnumBalances) = "balances"
  toJSON (LinkedAccountOptionsCommonPrefetch'NonNullableEnumOwnership) = "ownership"
  toJSON (LinkedAccountOptionsCommonPrefetch'NonNullableEnumTransactions) = "transactions"

instance Data.Aeson.Types.FromJSON.FromJSON LinkedAccountOptionsCommonPrefetch'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "balances" -> LinkedAccountOptionsCommonPrefetch'NonNullableEnumBalances
          | val GHC.Classes.== "ownership" -> LinkedAccountOptionsCommonPrefetch'NonNullableEnumOwnership
          | val GHC.Classes.== "transactions" -> LinkedAccountOptionsCommonPrefetch'NonNullableEnumTransactions
          | GHC.Base.otherwise -> LinkedAccountOptionsCommonPrefetch'NonNullableOther val
      )
