{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentMethodDetailsMobilepay
module StripeAPI.Types.PaymentMethodDetailsMobilepay where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.InternalCard
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_method_details_mobilepay@ in the specification.
data PaymentMethodDetailsMobilepay = PaymentMethodDetailsMobilepay
  { -- | card: Internal card details
    paymentMethodDetailsMobilepayCard :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PaymentMethodDetailsMobilepayCard'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsMobilepay where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsMobilepayCard obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsMobilepayCard obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsMobilepay where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsMobilepay" (\obj -> GHC.Base.pure PaymentMethodDetailsMobilepay GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card"))

-- | Create a new 'PaymentMethodDetailsMobilepay' with all required fields.
mkPaymentMethodDetailsMobilepay :: PaymentMethodDetailsMobilepay
mkPaymentMethodDetailsMobilepay = PaymentMethodDetailsMobilepay {paymentMethodDetailsMobilepayCard = GHC.Maybe.Nothing}

-- | Defines the object schema located at @components.schemas.payment_method_details_mobilepay.properties.card.anyOf@ in the specification.
--
-- Internal card details
data PaymentMethodDetailsMobilepayCard'NonNullable = PaymentMethodDetailsMobilepayCard'NonNullable
  { -- | brand: Brand of the card used in the transaction
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsMobilepayCard'NonNullableBrand :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | country: Two-letter ISO code representing the country of the card
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsMobilepayCard'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | exp_month: Two digit number representing the card\'s expiration month
    paymentMethodDetailsMobilepayCard'NonNullableExpMonth :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | exp_year: Two digit number representing the card\'s expiration year
    paymentMethodDetailsMobilepayCard'NonNullableExpYear :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | last4: The last 4 digits of the card
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsMobilepayCard'NonNullableLast4 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsMobilepayCard'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsMobilepayCard'NonNullableBrand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsMobilepayCard'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_month" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsMobilepayCard'NonNullableExpMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_year" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsMobilepayCard'NonNullableExpYear obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsMobilepayCard'NonNullableLast4 obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsMobilepayCard'NonNullableBrand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsMobilepayCard'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_month" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsMobilepayCard'NonNullableExpMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_year" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsMobilepayCard'NonNullableExpYear obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsMobilepayCard'NonNullableLast4 obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsMobilepayCard'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsMobilepayCard'NonNullable" (\obj -> ((((GHC.Base.pure PaymentMethodDetailsMobilepayCard'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "brand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "exp_month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "exp_year")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last4"))

-- | Create a new 'PaymentMethodDetailsMobilepayCard'NonNullable' with all required fields.
mkPaymentMethodDetailsMobilepayCard'NonNullable :: PaymentMethodDetailsMobilepayCard'NonNullable
mkPaymentMethodDetailsMobilepayCard'NonNullable =
  PaymentMethodDetailsMobilepayCard'NonNullable
    { paymentMethodDetailsMobilepayCard'NonNullableBrand = GHC.Maybe.Nothing,
      paymentMethodDetailsMobilepayCard'NonNullableCountry = GHC.Maybe.Nothing,
      paymentMethodDetailsMobilepayCard'NonNullableExpMonth = GHC.Maybe.Nothing,
      paymentMethodDetailsMobilepayCard'NonNullableExpYear = GHC.Maybe.Nothing,
      paymentMethodDetailsMobilepayCard'NonNullableLast4 = GHC.Maybe.Nothing
    }
