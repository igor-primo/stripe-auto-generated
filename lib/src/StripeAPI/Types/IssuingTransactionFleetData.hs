{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema IssuingTransactionFleetData
module StripeAPI.Types.IssuingTransactionFleetData where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFleetCardholderPromptData
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFleetFuelPriceData
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFleetNonFuelPriceData
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFleetReportedBreakdown
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFleetTaxData
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.issuing_transaction_fleet_data@ in the specification.
data IssuingTransactionFleetData = IssuingTransactionFleetData
  { -- | cardholder_prompt_data: Answers to prompts presented to cardholder at point of sale.
    issuingTransactionFleetDataCardholderPromptData :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionFleetDataCardholderPromptData'NonNullable)),
    -- | purchase_type: The type of purchase. One of \`fuel_purchase\`, \`non_fuel_purchase\`, or \`fuel_and_non_fuel_purchase\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionFleetDataPurchaseType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | reported_breakdown: More information about the total amount. This information is not guaranteed to be accurate as some merchants may provide unreliable data.
    issuingTransactionFleetDataReportedBreakdown :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionFleetDataReportedBreakdown'NonNullable)),
    -- | service_type: The type of fuel service. One of \`non_fuel_transaction\`, \`full_service\`, or \`self_service\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionFleetDataServiceType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionFleetData where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cardholder_prompt_data" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataCardholderPromptData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("purchase_type" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataPurchaseType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reported_breakdown" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_type" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataServiceType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cardholder_prompt_data" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataCardholderPromptData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("purchase_type" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataPurchaseType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reported_breakdown" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_type" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataServiceType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionFleetData where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionFleetData" (\obj -> (((GHC.Base.pure IssuingTransactionFleetData GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cardholder_prompt_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "purchase_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reported_breakdown")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "service_type"))

-- | Create a new 'IssuingTransactionFleetData' with all required fields.
mkIssuingTransactionFleetData :: IssuingTransactionFleetData
mkIssuingTransactionFleetData =
  IssuingTransactionFleetData
    { issuingTransactionFleetDataCardholderPromptData = GHC.Maybe.Nothing,
      issuingTransactionFleetDataPurchaseType = GHC.Maybe.Nothing,
      issuingTransactionFleetDataReportedBreakdown = GHC.Maybe.Nothing,
      issuingTransactionFleetDataServiceType = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.issuing_transaction_fleet_data.properties.cardholder_prompt_data.anyOf@ in the specification.
--
-- Answers to prompts presented to cardholder at point of sale.
data IssuingTransactionFleetDataCardholderPromptData'NonNullable = IssuingTransactionFleetDataCardholderPromptData'NonNullable
  { -- | driver_id: Driver ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionFleetDataCardholderPromptData'NonNullableDriverId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | odometer: Odometer reading.
    issuingTransactionFleetDataCardholderPromptData'NonNullableOdometer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | unspecified_id: An alphanumeric ID. This field is used when a vehicle ID, driver ID, or generic ID is entered by the cardholder, but the merchant or card network did not specify the prompt type.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionFleetDataCardholderPromptData'NonNullableUnspecifiedId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | user_id: User ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionFleetDataCardholderPromptData'NonNullableUserId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | vehicle_number: Vehicle number.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingTransactionFleetDataCardholderPromptData'NonNullableVehicleNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionFleetDataCardholderPromptData'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("driver_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataCardholderPromptData'NonNullableDriverId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("odometer" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataCardholderPromptData'NonNullableOdometer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unspecified_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataCardholderPromptData'NonNullableUnspecifiedId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataCardholderPromptData'NonNullableUserId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vehicle_number" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataCardholderPromptData'NonNullableVehicleNumber obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("driver_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataCardholderPromptData'NonNullableDriverId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("odometer" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataCardholderPromptData'NonNullableOdometer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unspecified_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataCardholderPromptData'NonNullableUnspecifiedId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_id" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataCardholderPromptData'NonNullableUserId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vehicle_number" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataCardholderPromptData'NonNullableVehicleNumber obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionFleetDataCardholderPromptData'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionFleetDataCardholderPromptData'NonNullable" (\obj -> ((((GHC.Base.pure IssuingTransactionFleetDataCardholderPromptData'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "driver_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "odometer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unspecified_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "vehicle_number"))

-- | Create a new 'IssuingTransactionFleetDataCardholderPromptData'NonNullable' with all required fields.
mkIssuingTransactionFleetDataCardholderPromptData'NonNullable :: IssuingTransactionFleetDataCardholderPromptData'NonNullable
mkIssuingTransactionFleetDataCardholderPromptData'NonNullable =
  IssuingTransactionFleetDataCardholderPromptData'NonNullable
    { issuingTransactionFleetDataCardholderPromptData'NonNullableDriverId = GHC.Maybe.Nothing,
      issuingTransactionFleetDataCardholderPromptData'NonNullableOdometer = GHC.Maybe.Nothing,
      issuingTransactionFleetDataCardholderPromptData'NonNullableUnspecifiedId = GHC.Maybe.Nothing,
      issuingTransactionFleetDataCardholderPromptData'NonNullableUserId = GHC.Maybe.Nothing,
      issuingTransactionFleetDataCardholderPromptData'NonNullableVehicleNumber = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.issuing_transaction_fleet_data.properties.reported_breakdown.anyOf@ in the specification.
--
-- More information about the total amount. This information is not guaranteed to be accurate as some merchants may provide unreliable data.
data IssuingTransactionFleetDataReportedBreakdown'NonNullable = IssuingTransactionFleetDataReportedBreakdown'NonNullable
  { -- | fuel: Breakdown of fuel portion of the purchase.
    issuingTransactionFleetDataReportedBreakdown'NonNullableFuel :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullable)),
    -- | non_fuel: Breakdown of non-fuel portion of the purchase.
    issuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullable)),
    -- | tax: Information about tax included in this transaction.
    issuingTransactionFleetDataReportedBreakdown'NonNullableTax :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionFleetDataReportedBreakdown'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fuel" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown'NonNullableFuel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("non_fuel" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown'NonNullableTax obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fuel" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown'NonNullableFuel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("non_fuel" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown'NonNullableTax obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionFleetDataReportedBreakdown'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionFleetDataReportedBreakdown'NonNullable" (\obj -> ((GHC.Base.pure IssuingTransactionFleetDataReportedBreakdown'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fuel")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "non_fuel")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax"))

-- | Create a new 'IssuingTransactionFleetDataReportedBreakdown'NonNullable' with all required fields.
mkIssuingTransactionFleetDataReportedBreakdown'NonNullable :: IssuingTransactionFleetDataReportedBreakdown'NonNullable
mkIssuingTransactionFleetDataReportedBreakdown'NonNullable =
  IssuingTransactionFleetDataReportedBreakdown'NonNullable
    { issuingTransactionFleetDataReportedBreakdown'NonNullableFuel = GHC.Maybe.Nothing,
      issuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel = GHC.Maybe.Nothing,
      issuingTransactionFleetDataReportedBreakdown'NonNullableTax = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.issuing_transaction_fleet_data.properties.reported_breakdown.anyOf.properties.fuel.anyOf@ in the specification.
--
-- Breakdown of fuel portion of the purchase.
data IssuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullable = IssuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullable
  { -- | gross_amount_decimal: Gross fuel amount that should equal Fuel Volume multipled by Fuel Unit Cost, inclusive of taxes.
    issuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullableGrossAmountDecimal :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gross_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullableGrossAmountDecimal obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gross_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullableGrossAmountDecimal obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullable" (\obj -> GHC.Base.pure IssuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gross_amount_decimal"))

-- | Create a new 'IssuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullable' with all required fields.
mkIssuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullable :: IssuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullable
mkIssuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullable = IssuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullable {issuingTransactionFleetDataReportedBreakdown'NonNullableFuel'NonNullableGrossAmountDecimal = GHC.Maybe.Nothing}

-- | Defines the object schema located at @components.schemas.issuing_transaction_fleet_data.properties.reported_breakdown.anyOf.properties.non_fuel.anyOf@ in the specification.
--
-- Breakdown of non-fuel portion of the purchase.
data IssuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullable = IssuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullable
  { -- | gross_amount_decimal: Gross non-fuel amount that should equal the sum of the line items, inclusive of taxes.
    issuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullableGrossAmountDecimal :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gross_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullableGrossAmountDecimal obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gross_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullableGrossAmountDecimal obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullable" (\obj -> GHC.Base.pure IssuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gross_amount_decimal"))

-- | Create a new 'IssuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullable' with all required fields.
mkIssuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullable :: IssuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullable
mkIssuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullable = IssuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullable {issuingTransactionFleetDataReportedBreakdown'NonNullableNonFuel'NonNullableGrossAmountDecimal = GHC.Maybe.Nothing}

-- | Defines the object schema located at @components.schemas.issuing_transaction_fleet_data.properties.reported_breakdown.anyOf.properties.tax.anyOf@ in the specification.
--
-- Information about tax included in this transaction.
data IssuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullable = IssuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullable
  { -- | local_amount_decimal: Amount of state or provincial Sales Tax included in the transaction amount. Null if not reported by merchant or not subject to tax.
    issuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullableLocalAmountDecimal :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | national_amount_decimal: Amount of national Sales Tax or VAT included in the transaction amount. Null if not reported by merchant or not subject to tax.
    issuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullableNationalAmountDecimal :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("local_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullableLocalAmountDecimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("national_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullableNationalAmountDecimal obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("local_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullableLocalAmountDecimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("national_amount_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullableNationalAmountDecimal obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullable" (\obj -> (GHC.Base.pure IssuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "local_amount_decimal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "national_amount_decimal"))

-- | Create a new 'IssuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullable' with all required fields.
mkIssuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullable :: IssuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullable
mkIssuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullable =
  IssuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullable
    { issuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullableLocalAmountDecimal = GHC.Maybe.Nothing,
      issuingTransactionFleetDataReportedBreakdown'NonNullableTax'NonNullableNationalAmountDecimal = GHC.Maybe.Nothing
    }
