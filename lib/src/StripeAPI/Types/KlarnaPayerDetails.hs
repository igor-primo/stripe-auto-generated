{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema KlarnaPayerDetails
module StripeAPI.Types.KlarnaPayerDetails where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.KlarnaAddress
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.klarna_payer_details@ in the specification.
data KlarnaPayerDetails = KlarnaPayerDetails
  { -- | address: The payer\'s address
    klarnaPayerDetailsAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable KlarnaPayerDetailsAddress'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON KlarnaPayerDetails where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (klarnaPayerDetailsAddress obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (klarnaPayerDetailsAddress obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON KlarnaPayerDetails where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "KlarnaPayerDetails" (\obj -> GHC.Base.pure KlarnaPayerDetails GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address"))

-- | Create a new 'KlarnaPayerDetails' with all required fields.
mkKlarnaPayerDetails :: KlarnaPayerDetails
mkKlarnaPayerDetails = KlarnaPayerDetails {klarnaPayerDetailsAddress = GHC.Maybe.Nothing}

-- | Defines the object schema located at @components.schemas.klarna_payer_details.properties.address.anyOf@ in the specification.
--
-- The payer\\\'s address
data KlarnaPayerDetailsAddress'NonNullable = KlarnaPayerDetailsAddress'NonNullable
  { -- | country: The payer address country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    klarnaPayerDetailsAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON KlarnaPayerDetailsAddress'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (klarnaPayerDetailsAddress'NonNullableCountry obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (klarnaPayerDetailsAddress'NonNullableCountry obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON KlarnaPayerDetailsAddress'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "KlarnaPayerDetailsAddress'NonNullable" (\obj -> GHC.Base.pure KlarnaPayerDetailsAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country"))

-- | Create a new 'KlarnaPayerDetailsAddress'NonNullable' with all required fields.
mkKlarnaPayerDetailsAddress'NonNullable :: KlarnaPayerDetailsAddress'NonNullable
mkKlarnaPayerDetailsAddress'NonNullable = KlarnaPayerDetailsAddress'NonNullable {klarnaPayerDetailsAddress'NonNullableCountry = GHC.Maybe.Nothing}
