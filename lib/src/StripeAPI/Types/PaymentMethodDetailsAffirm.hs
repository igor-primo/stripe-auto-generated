{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentMethodDetailsAffirm
module StripeAPI.Types.PaymentMethodDetailsAffirm where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_method_details_affirm@ in the specification.
data PaymentMethodDetailsAffirm = PaymentMethodDetailsAffirm
  { -- | location: ID of the [location](https:\/\/stripe.com\/docs\/api\/terminal\/locations) that this transaction\'s reader is assigned to.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsAffirmLocation :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | reader: ID of the [reader](https:\/\/stripe.com\/docs\/api\/terminal\/readers) this transaction was made on.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsAffirmReader :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | transaction_id: The Affirm transaction ID associated with this payment.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsAffirmTransactionId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsAffirm where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("location" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsAffirmLocation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reader" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsAffirmReader obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_id" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsAffirmTransactionId obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("location" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsAffirmLocation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reader" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsAffirmReader obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_id" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsAffirmTransactionId obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsAffirm where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsAffirm" (\obj -> ((GHC.Base.pure PaymentMethodDetailsAffirm GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "location")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reader")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transaction_id"))

-- | Create a new 'PaymentMethodDetailsAffirm' with all required fields.
mkPaymentMethodDetailsAffirm :: PaymentMethodDetailsAffirm
mkPaymentMethodDetailsAffirm =
  PaymentMethodDetailsAffirm
    { paymentMethodDetailsAffirmLocation = GHC.Maybe.Nothing,
      paymentMethodDetailsAffirmReader = GHC.Maybe.Nothing,
      paymentMethodDetailsAffirmTransactionId = GHC.Maybe.Nothing
    }
